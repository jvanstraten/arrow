// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: parameterized_types.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_parameterized_5ftypes_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_parameterized_5ftypes_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3016000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3016000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "type.pb.h"
#include "extensions.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_parameterized_5ftypes_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_parameterized_5ftypes_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_parameterized_5ftypes_2eproto;
namespace io {
namespace substrait {
class ParameterizedType;
struct ParameterizedTypeDefaultTypeInternal;
extern ParameterizedTypeDefaultTypeInternal _ParameterizedType_default_instance_;
class ParameterizedType_IntegerOption;
struct ParameterizedType_IntegerOptionDefaultTypeInternal;
extern ParameterizedType_IntegerOptionDefaultTypeInternal _ParameterizedType_IntegerOption_default_instance_;
class ParameterizedType_IntegerParameter;
struct ParameterizedType_IntegerParameterDefaultTypeInternal;
extern ParameterizedType_IntegerParameterDefaultTypeInternal _ParameterizedType_IntegerParameter_default_instance_;
class ParameterizedType_NullableInteger;
struct ParameterizedType_NullableIntegerDefaultTypeInternal;
extern ParameterizedType_NullableIntegerDefaultTypeInternal _ParameterizedType_NullableInteger_default_instance_;
class ParameterizedType_ParameterizedDecimal;
struct ParameterizedType_ParameterizedDecimalDefaultTypeInternal;
extern ParameterizedType_ParameterizedDecimalDefaultTypeInternal _ParameterizedType_ParameterizedDecimal_default_instance_;
class ParameterizedType_ParameterizedFixedBinary;
struct ParameterizedType_ParameterizedFixedBinaryDefaultTypeInternal;
extern ParameterizedType_ParameterizedFixedBinaryDefaultTypeInternal _ParameterizedType_ParameterizedFixedBinary_default_instance_;
class ParameterizedType_ParameterizedFixedChar;
struct ParameterizedType_ParameterizedFixedCharDefaultTypeInternal;
extern ParameterizedType_ParameterizedFixedCharDefaultTypeInternal _ParameterizedType_ParameterizedFixedChar_default_instance_;
class ParameterizedType_ParameterizedList;
struct ParameterizedType_ParameterizedListDefaultTypeInternal;
extern ParameterizedType_ParameterizedListDefaultTypeInternal _ParameterizedType_ParameterizedList_default_instance_;
class ParameterizedType_ParameterizedMap;
struct ParameterizedType_ParameterizedMapDefaultTypeInternal;
extern ParameterizedType_ParameterizedMapDefaultTypeInternal _ParameterizedType_ParameterizedMap_default_instance_;
class ParameterizedType_ParameterizedNamedStruct;
struct ParameterizedType_ParameterizedNamedStructDefaultTypeInternal;
extern ParameterizedType_ParameterizedNamedStructDefaultTypeInternal _ParameterizedType_ParameterizedNamedStruct_default_instance_;
class ParameterizedType_ParameterizedStruct;
struct ParameterizedType_ParameterizedStructDefaultTypeInternal;
extern ParameterizedType_ParameterizedStructDefaultTypeInternal _ParameterizedType_ParameterizedStruct_default_instance_;
class ParameterizedType_ParameterizedVarChar;
struct ParameterizedType_ParameterizedVarCharDefaultTypeInternal;
extern ParameterizedType_ParameterizedVarCharDefaultTypeInternal _ParameterizedType_ParameterizedVarChar_default_instance_;
class ParameterizedType_TypeParameter;
struct ParameterizedType_TypeParameterDefaultTypeInternal;
extern ParameterizedType_TypeParameterDefaultTypeInternal _ParameterizedType_TypeParameter_default_instance_;
}  // namespace substrait
}  // namespace io
PROTOBUF_NAMESPACE_OPEN
template<> ::io::substrait::ParameterizedType* Arena::CreateMaybeMessage<::io::substrait::ParameterizedType>(Arena*);
template<> ::io::substrait::ParameterizedType_IntegerOption* Arena::CreateMaybeMessage<::io::substrait::ParameterizedType_IntegerOption>(Arena*);
template<> ::io::substrait::ParameterizedType_IntegerParameter* Arena::CreateMaybeMessage<::io::substrait::ParameterizedType_IntegerParameter>(Arena*);
template<> ::io::substrait::ParameterizedType_NullableInteger* Arena::CreateMaybeMessage<::io::substrait::ParameterizedType_NullableInteger>(Arena*);
template<> ::io::substrait::ParameterizedType_ParameterizedDecimal* Arena::CreateMaybeMessage<::io::substrait::ParameterizedType_ParameterizedDecimal>(Arena*);
template<> ::io::substrait::ParameterizedType_ParameterizedFixedBinary* Arena::CreateMaybeMessage<::io::substrait::ParameterizedType_ParameterizedFixedBinary>(Arena*);
template<> ::io::substrait::ParameterizedType_ParameterizedFixedChar* Arena::CreateMaybeMessage<::io::substrait::ParameterizedType_ParameterizedFixedChar>(Arena*);
template<> ::io::substrait::ParameterizedType_ParameterizedList* Arena::CreateMaybeMessage<::io::substrait::ParameterizedType_ParameterizedList>(Arena*);
template<> ::io::substrait::ParameterizedType_ParameterizedMap* Arena::CreateMaybeMessage<::io::substrait::ParameterizedType_ParameterizedMap>(Arena*);
template<> ::io::substrait::ParameterizedType_ParameterizedNamedStruct* Arena::CreateMaybeMessage<::io::substrait::ParameterizedType_ParameterizedNamedStruct>(Arena*);
template<> ::io::substrait::ParameterizedType_ParameterizedStruct* Arena::CreateMaybeMessage<::io::substrait::ParameterizedType_ParameterizedStruct>(Arena*);
template<> ::io::substrait::ParameterizedType_ParameterizedVarChar* Arena::CreateMaybeMessage<::io::substrait::ParameterizedType_ParameterizedVarChar>(Arena*);
template<> ::io::substrait::ParameterizedType_TypeParameter* Arena::CreateMaybeMessage<::io::substrait::ParameterizedType_TypeParameter>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace io {
namespace substrait {

// ===================================================================

class ParameterizedType_TypeParameter PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.substrait.ParameterizedType.TypeParameter) */ {
 public:
  inline ParameterizedType_TypeParameter() : ParameterizedType_TypeParameter(nullptr) {}
  ~ParameterizedType_TypeParameter() override;
  explicit constexpr ParameterizedType_TypeParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterizedType_TypeParameter(const ParameterizedType_TypeParameter& from);
  ParameterizedType_TypeParameter(ParameterizedType_TypeParameter&& from) noexcept
    : ParameterizedType_TypeParameter() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_TypeParameter& operator=(const ParameterizedType_TypeParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterizedType_TypeParameter& operator=(ParameterizedType_TypeParameter&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterizedType_TypeParameter& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParameterizedType_TypeParameter* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_TypeParameter*>(
               &_ParameterizedType_TypeParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ParameterizedType_TypeParameter& a, ParameterizedType_TypeParameter& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterizedType_TypeParameter* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterizedType_TypeParameter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_TypeParameter* New() const final {
    return CreateMaybeMessage<ParameterizedType_TypeParameter>(nullptr);
  }

  ParameterizedType_TypeParameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_TypeParameter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParameterizedType_TypeParameter& from);
  void MergeFrom(const ParameterizedType_TypeParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_TypeParameter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.substrait.ParameterizedType.TypeParameter";
  }
  protected:
  explicit ParameterizedType_TypeParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBoundsFieldNumber = 2,
    kNameFieldNumber = 1,
  };
  // repeated .io.substrait.ParameterizedType bounds = 2;
  int bounds_size() const;
  private:
  int _internal_bounds_size() const;
  public:
  void clear_bounds();
  ::io::substrait::ParameterizedType* mutable_bounds(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::io::substrait::ParameterizedType >*
      mutable_bounds();
  private:
  const ::io::substrait::ParameterizedType& _internal_bounds(int index) const;
  ::io::substrait::ParameterizedType* _internal_add_bounds();
  public:
  const ::io::substrait::ParameterizedType& bounds(int index) const;
  ::io::substrait::ParameterizedType* add_bounds();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::io::substrait::ParameterizedType >&
      bounds() const;

  // string name = 1;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:io.substrait.ParameterizedType.TypeParameter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::io::substrait::ParameterizedType > bounds_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_parameterized_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class ParameterizedType_IntegerParameter PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.substrait.ParameterizedType.IntegerParameter) */ {
 public:
  inline ParameterizedType_IntegerParameter() : ParameterizedType_IntegerParameter(nullptr) {}
  ~ParameterizedType_IntegerParameter() override;
  explicit constexpr ParameterizedType_IntegerParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterizedType_IntegerParameter(const ParameterizedType_IntegerParameter& from);
  ParameterizedType_IntegerParameter(ParameterizedType_IntegerParameter&& from) noexcept
    : ParameterizedType_IntegerParameter() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_IntegerParameter& operator=(const ParameterizedType_IntegerParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterizedType_IntegerParameter& operator=(ParameterizedType_IntegerParameter&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterizedType_IntegerParameter& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParameterizedType_IntegerParameter* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_IntegerParameter*>(
               &_ParameterizedType_IntegerParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ParameterizedType_IntegerParameter& a, ParameterizedType_IntegerParameter& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterizedType_IntegerParameter* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterizedType_IntegerParameter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_IntegerParameter* New() const final {
    return CreateMaybeMessage<ParameterizedType_IntegerParameter>(nullptr);
  }

  ParameterizedType_IntegerParameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_IntegerParameter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParameterizedType_IntegerParameter& from);
  void MergeFrom(const ParameterizedType_IntegerParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_IntegerParameter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.substrait.ParameterizedType.IntegerParameter";
  }
  protected:
  explicit ParameterizedType_IntegerParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kRangeStartInclusiveFieldNumber = 2,
    kRangeEndExclusiveFieldNumber = 3,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .io.substrait.ParameterizedType.NullableInteger range_start_inclusive = 2;
  bool has_range_start_inclusive() const;
  private:
  bool _internal_has_range_start_inclusive() const;
  public:
  void clear_range_start_inclusive();
  const ::io::substrait::ParameterizedType_NullableInteger& range_start_inclusive() const;
  ::io::substrait::ParameterizedType_NullableInteger* release_range_start_inclusive();
  ::io::substrait::ParameterizedType_NullableInteger* mutable_range_start_inclusive();
  void set_allocated_range_start_inclusive(::io::substrait::ParameterizedType_NullableInteger* range_start_inclusive);
  private:
  const ::io::substrait::ParameterizedType_NullableInteger& _internal_range_start_inclusive() const;
  ::io::substrait::ParameterizedType_NullableInteger* _internal_mutable_range_start_inclusive();
  public:
  void unsafe_arena_set_allocated_range_start_inclusive(
      ::io::substrait::ParameterizedType_NullableInteger* range_start_inclusive);
  ::io::substrait::ParameterizedType_NullableInteger* unsafe_arena_release_range_start_inclusive();

  // .io.substrait.ParameterizedType.NullableInteger range_end_exclusive = 3;
  bool has_range_end_exclusive() const;
  private:
  bool _internal_has_range_end_exclusive() const;
  public:
  void clear_range_end_exclusive();
  const ::io::substrait::ParameterizedType_NullableInteger& range_end_exclusive() const;
  ::io::substrait::ParameterizedType_NullableInteger* release_range_end_exclusive();
  ::io::substrait::ParameterizedType_NullableInteger* mutable_range_end_exclusive();
  void set_allocated_range_end_exclusive(::io::substrait::ParameterizedType_NullableInteger* range_end_exclusive);
  private:
  const ::io::substrait::ParameterizedType_NullableInteger& _internal_range_end_exclusive() const;
  ::io::substrait::ParameterizedType_NullableInteger* _internal_mutable_range_end_exclusive();
  public:
  void unsafe_arena_set_allocated_range_end_exclusive(
      ::io::substrait::ParameterizedType_NullableInteger* range_end_exclusive);
  ::io::substrait::ParameterizedType_NullableInteger* unsafe_arena_release_range_end_exclusive();

  // @@protoc_insertion_point(class_scope:io.substrait.ParameterizedType.IntegerParameter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::io::substrait::ParameterizedType_NullableInteger* range_start_inclusive_;
  ::io::substrait::ParameterizedType_NullableInteger* range_end_exclusive_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_parameterized_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class ParameterizedType_NullableInteger PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.substrait.ParameterizedType.NullableInteger) */ {
 public:
  inline ParameterizedType_NullableInteger() : ParameterizedType_NullableInteger(nullptr) {}
  ~ParameterizedType_NullableInteger() override;
  explicit constexpr ParameterizedType_NullableInteger(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterizedType_NullableInteger(const ParameterizedType_NullableInteger& from);
  ParameterizedType_NullableInteger(ParameterizedType_NullableInteger&& from) noexcept
    : ParameterizedType_NullableInteger() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_NullableInteger& operator=(const ParameterizedType_NullableInteger& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterizedType_NullableInteger& operator=(ParameterizedType_NullableInteger&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterizedType_NullableInteger& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParameterizedType_NullableInteger* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_NullableInteger*>(
               &_ParameterizedType_NullableInteger_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ParameterizedType_NullableInteger& a, ParameterizedType_NullableInteger& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterizedType_NullableInteger* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterizedType_NullableInteger* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_NullableInteger* New() const final {
    return CreateMaybeMessage<ParameterizedType_NullableInteger>(nullptr);
  }

  ParameterizedType_NullableInteger* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_NullableInteger>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParameterizedType_NullableInteger& from);
  void MergeFrom(const ParameterizedType_NullableInteger& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_NullableInteger* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.substrait.ParameterizedType.NullableInteger";
  }
  protected:
  explicit ParameterizedType_NullableInteger(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int64 value = 1;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int64 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:io.substrait.ParameterizedType.NullableInteger)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_parameterized_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedFixedChar PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.substrait.ParameterizedType.ParameterizedFixedChar) */ {
 public:
  inline ParameterizedType_ParameterizedFixedChar() : ParameterizedType_ParameterizedFixedChar(nullptr) {}
  ~ParameterizedType_ParameterizedFixedChar() override;
  explicit constexpr ParameterizedType_ParameterizedFixedChar(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterizedType_ParameterizedFixedChar(const ParameterizedType_ParameterizedFixedChar& from);
  ParameterizedType_ParameterizedFixedChar(ParameterizedType_ParameterizedFixedChar&& from) noexcept
    : ParameterizedType_ParameterizedFixedChar() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedFixedChar& operator=(const ParameterizedType_ParameterizedFixedChar& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterizedType_ParameterizedFixedChar& operator=(ParameterizedType_ParameterizedFixedChar&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterizedType_ParameterizedFixedChar& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParameterizedType_ParameterizedFixedChar* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedFixedChar*>(
               &_ParameterizedType_ParameterizedFixedChar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ParameterizedType_ParameterizedFixedChar& a, ParameterizedType_ParameterizedFixedChar& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterizedType_ParameterizedFixedChar* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterizedType_ParameterizedFixedChar* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedFixedChar* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedFixedChar>(nullptr);
  }

  ParameterizedType_ParameterizedFixedChar* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedFixedChar>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedFixedChar& from);
  void MergeFrom(const ParameterizedType_ParameterizedFixedChar& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedFixedChar* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.substrait.ParameterizedType.ParameterizedFixedChar";
  }
  protected:
  explicit ParameterizedType_ParameterizedFixedChar(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLengthFieldNumber = 1,
    kVariationFieldNumber = 2,
    kNullabilityFieldNumber = 3,
  };
  // .io.substrait.ParameterizedType.IntegerOption length = 1;
  bool has_length() const;
  private:
  bool _internal_has_length() const;
  public:
  void clear_length();
  const ::io::substrait::ParameterizedType_IntegerOption& length() const;
  ::io::substrait::ParameterizedType_IntegerOption* release_length();
  ::io::substrait::ParameterizedType_IntegerOption* mutable_length();
  void set_allocated_length(::io::substrait::ParameterizedType_IntegerOption* length);
  private:
  const ::io::substrait::ParameterizedType_IntegerOption& _internal_length() const;
  ::io::substrait::ParameterizedType_IntegerOption* _internal_mutable_length();
  public:
  void unsafe_arena_set_allocated_length(
      ::io::substrait::ParameterizedType_IntegerOption* length);
  ::io::substrait::ParameterizedType_IntegerOption* unsafe_arena_release_length();

  // .io.substrait.Type.Variation variation = 2;
  bool has_variation() const;
  private:
  bool _internal_has_variation() const;
  public:
  void clear_variation();
  const ::io::substrait::Type_Variation& variation() const;
  ::io::substrait::Type_Variation* release_variation();
  ::io::substrait::Type_Variation* mutable_variation();
  void set_allocated_variation(::io::substrait::Type_Variation* variation);
  private:
  const ::io::substrait::Type_Variation& _internal_variation() const;
  ::io::substrait::Type_Variation* _internal_mutable_variation();
  public:
  void unsafe_arena_set_allocated_variation(
      ::io::substrait::Type_Variation* variation);
  ::io::substrait::Type_Variation* unsafe_arena_release_variation();

  // .io.substrait.Type.Nullability nullability = 3;
  void clear_nullability();
  ::io::substrait::Type_Nullability nullability() const;
  void set_nullability(::io::substrait::Type_Nullability value);
  private:
  ::io::substrait::Type_Nullability _internal_nullability() const;
  void _internal_set_nullability(::io::substrait::Type_Nullability value);
  public:

  // @@protoc_insertion_point(class_scope:io.substrait.ParameterizedType.ParameterizedFixedChar)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::io::substrait::ParameterizedType_IntegerOption* length_;
  ::io::substrait::Type_Variation* variation_;
  int nullability_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_parameterized_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedVarChar PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.substrait.ParameterizedType.ParameterizedVarChar) */ {
 public:
  inline ParameterizedType_ParameterizedVarChar() : ParameterizedType_ParameterizedVarChar(nullptr) {}
  ~ParameterizedType_ParameterizedVarChar() override;
  explicit constexpr ParameterizedType_ParameterizedVarChar(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterizedType_ParameterizedVarChar(const ParameterizedType_ParameterizedVarChar& from);
  ParameterizedType_ParameterizedVarChar(ParameterizedType_ParameterizedVarChar&& from) noexcept
    : ParameterizedType_ParameterizedVarChar() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedVarChar& operator=(const ParameterizedType_ParameterizedVarChar& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterizedType_ParameterizedVarChar& operator=(ParameterizedType_ParameterizedVarChar&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterizedType_ParameterizedVarChar& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParameterizedType_ParameterizedVarChar* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedVarChar*>(
               &_ParameterizedType_ParameterizedVarChar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ParameterizedType_ParameterizedVarChar& a, ParameterizedType_ParameterizedVarChar& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterizedType_ParameterizedVarChar* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterizedType_ParameterizedVarChar* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedVarChar* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedVarChar>(nullptr);
  }

  ParameterizedType_ParameterizedVarChar* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedVarChar>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedVarChar& from);
  void MergeFrom(const ParameterizedType_ParameterizedVarChar& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedVarChar* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.substrait.ParameterizedType.ParameterizedVarChar";
  }
  protected:
  explicit ParameterizedType_ParameterizedVarChar(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLengthFieldNumber = 1,
    kVariationFieldNumber = 2,
    kNullabilityFieldNumber = 3,
  };
  // .io.substrait.ParameterizedType.IntegerOption length = 1;
  bool has_length() const;
  private:
  bool _internal_has_length() const;
  public:
  void clear_length();
  const ::io::substrait::ParameterizedType_IntegerOption& length() const;
  ::io::substrait::ParameterizedType_IntegerOption* release_length();
  ::io::substrait::ParameterizedType_IntegerOption* mutable_length();
  void set_allocated_length(::io::substrait::ParameterizedType_IntegerOption* length);
  private:
  const ::io::substrait::ParameterizedType_IntegerOption& _internal_length() const;
  ::io::substrait::ParameterizedType_IntegerOption* _internal_mutable_length();
  public:
  void unsafe_arena_set_allocated_length(
      ::io::substrait::ParameterizedType_IntegerOption* length);
  ::io::substrait::ParameterizedType_IntegerOption* unsafe_arena_release_length();

  // .io.substrait.Type.Variation variation = 2;
  bool has_variation() const;
  private:
  bool _internal_has_variation() const;
  public:
  void clear_variation();
  const ::io::substrait::Type_Variation& variation() const;
  ::io::substrait::Type_Variation* release_variation();
  ::io::substrait::Type_Variation* mutable_variation();
  void set_allocated_variation(::io::substrait::Type_Variation* variation);
  private:
  const ::io::substrait::Type_Variation& _internal_variation() const;
  ::io::substrait::Type_Variation* _internal_mutable_variation();
  public:
  void unsafe_arena_set_allocated_variation(
      ::io::substrait::Type_Variation* variation);
  ::io::substrait::Type_Variation* unsafe_arena_release_variation();

  // .io.substrait.Type.Nullability nullability = 3;
  void clear_nullability();
  ::io::substrait::Type_Nullability nullability() const;
  void set_nullability(::io::substrait::Type_Nullability value);
  private:
  ::io::substrait::Type_Nullability _internal_nullability() const;
  void _internal_set_nullability(::io::substrait::Type_Nullability value);
  public:

  // @@protoc_insertion_point(class_scope:io.substrait.ParameterizedType.ParameterizedVarChar)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::io::substrait::ParameterizedType_IntegerOption* length_;
  ::io::substrait::Type_Variation* variation_;
  int nullability_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_parameterized_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedFixedBinary PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.substrait.ParameterizedType.ParameterizedFixedBinary) */ {
 public:
  inline ParameterizedType_ParameterizedFixedBinary() : ParameterizedType_ParameterizedFixedBinary(nullptr) {}
  ~ParameterizedType_ParameterizedFixedBinary() override;
  explicit constexpr ParameterizedType_ParameterizedFixedBinary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterizedType_ParameterizedFixedBinary(const ParameterizedType_ParameterizedFixedBinary& from);
  ParameterizedType_ParameterizedFixedBinary(ParameterizedType_ParameterizedFixedBinary&& from) noexcept
    : ParameterizedType_ParameterizedFixedBinary() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedFixedBinary& operator=(const ParameterizedType_ParameterizedFixedBinary& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterizedType_ParameterizedFixedBinary& operator=(ParameterizedType_ParameterizedFixedBinary&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterizedType_ParameterizedFixedBinary& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParameterizedType_ParameterizedFixedBinary* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedFixedBinary*>(
               &_ParameterizedType_ParameterizedFixedBinary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ParameterizedType_ParameterizedFixedBinary& a, ParameterizedType_ParameterizedFixedBinary& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterizedType_ParameterizedFixedBinary* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterizedType_ParameterizedFixedBinary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedFixedBinary* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedFixedBinary>(nullptr);
  }

  ParameterizedType_ParameterizedFixedBinary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedFixedBinary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedFixedBinary& from);
  void MergeFrom(const ParameterizedType_ParameterizedFixedBinary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedFixedBinary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.substrait.ParameterizedType.ParameterizedFixedBinary";
  }
  protected:
  explicit ParameterizedType_ParameterizedFixedBinary(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLengthFieldNumber = 1,
    kVariationFieldNumber = 2,
    kNullabilityFieldNumber = 3,
  };
  // .io.substrait.ParameterizedType.IntegerOption length = 1;
  bool has_length() const;
  private:
  bool _internal_has_length() const;
  public:
  void clear_length();
  const ::io::substrait::ParameterizedType_IntegerOption& length() const;
  ::io::substrait::ParameterizedType_IntegerOption* release_length();
  ::io::substrait::ParameterizedType_IntegerOption* mutable_length();
  void set_allocated_length(::io::substrait::ParameterizedType_IntegerOption* length);
  private:
  const ::io::substrait::ParameterizedType_IntegerOption& _internal_length() const;
  ::io::substrait::ParameterizedType_IntegerOption* _internal_mutable_length();
  public:
  void unsafe_arena_set_allocated_length(
      ::io::substrait::ParameterizedType_IntegerOption* length);
  ::io::substrait::ParameterizedType_IntegerOption* unsafe_arena_release_length();

  // .io.substrait.Type.Variation variation = 2;
  bool has_variation() const;
  private:
  bool _internal_has_variation() const;
  public:
  void clear_variation();
  const ::io::substrait::Type_Variation& variation() const;
  ::io::substrait::Type_Variation* release_variation();
  ::io::substrait::Type_Variation* mutable_variation();
  void set_allocated_variation(::io::substrait::Type_Variation* variation);
  private:
  const ::io::substrait::Type_Variation& _internal_variation() const;
  ::io::substrait::Type_Variation* _internal_mutable_variation();
  public:
  void unsafe_arena_set_allocated_variation(
      ::io::substrait::Type_Variation* variation);
  ::io::substrait::Type_Variation* unsafe_arena_release_variation();

  // .io.substrait.Type.Nullability nullability = 3;
  void clear_nullability();
  ::io::substrait::Type_Nullability nullability() const;
  void set_nullability(::io::substrait::Type_Nullability value);
  private:
  ::io::substrait::Type_Nullability _internal_nullability() const;
  void _internal_set_nullability(::io::substrait::Type_Nullability value);
  public:

  // @@protoc_insertion_point(class_scope:io.substrait.ParameterizedType.ParameterizedFixedBinary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::io::substrait::ParameterizedType_IntegerOption* length_;
  ::io::substrait::Type_Variation* variation_;
  int nullability_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_parameterized_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedDecimal PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.substrait.ParameterizedType.ParameterizedDecimal) */ {
 public:
  inline ParameterizedType_ParameterizedDecimal() : ParameterizedType_ParameterizedDecimal(nullptr) {}
  ~ParameterizedType_ParameterizedDecimal() override;
  explicit constexpr ParameterizedType_ParameterizedDecimal(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterizedType_ParameterizedDecimal(const ParameterizedType_ParameterizedDecimal& from);
  ParameterizedType_ParameterizedDecimal(ParameterizedType_ParameterizedDecimal&& from) noexcept
    : ParameterizedType_ParameterizedDecimal() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedDecimal& operator=(const ParameterizedType_ParameterizedDecimal& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterizedType_ParameterizedDecimal& operator=(ParameterizedType_ParameterizedDecimal&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterizedType_ParameterizedDecimal& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParameterizedType_ParameterizedDecimal* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedDecimal*>(
               &_ParameterizedType_ParameterizedDecimal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ParameterizedType_ParameterizedDecimal& a, ParameterizedType_ParameterizedDecimal& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterizedType_ParameterizedDecimal* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterizedType_ParameterizedDecimal* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedDecimal* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedDecimal>(nullptr);
  }

  ParameterizedType_ParameterizedDecimal* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedDecimal>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedDecimal& from);
  void MergeFrom(const ParameterizedType_ParameterizedDecimal& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedDecimal* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.substrait.ParameterizedType.ParameterizedDecimal";
  }
  protected:
  explicit ParameterizedType_ParameterizedDecimal(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScaleFieldNumber = 1,
    kPrecisionFieldNumber = 2,
    kVariationFieldNumber = 3,
    kNullabilityFieldNumber = 4,
  };
  // .io.substrait.ParameterizedType.IntegerOption scale = 1;
  bool has_scale() const;
  private:
  bool _internal_has_scale() const;
  public:
  void clear_scale();
  const ::io::substrait::ParameterizedType_IntegerOption& scale() const;
  ::io::substrait::ParameterizedType_IntegerOption* release_scale();
  ::io::substrait::ParameterizedType_IntegerOption* mutable_scale();
  void set_allocated_scale(::io::substrait::ParameterizedType_IntegerOption* scale);
  private:
  const ::io::substrait::ParameterizedType_IntegerOption& _internal_scale() const;
  ::io::substrait::ParameterizedType_IntegerOption* _internal_mutable_scale();
  public:
  void unsafe_arena_set_allocated_scale(
      ::io::substrait::ParameterizedType_IntegerOption* scale);
  ::io::substrait::ParameterizedType_IntegerOption* unsafe_arena_release_scale();

  // .io.substrait.ParameterizedType.IntegerOption precision = 2;
  bool has_precision() const;
  private:
  bool _internal_has_precision() const;
  public:
  void clear_precision();
  const ::io::substrait::ParameterizedType_IntegerOption& precision() const;
  ::io::substrait::ParameterizedType_IntegerOption* release_precision();
  ::io::substrait::ParameterizedType_IntegerOption* mutable_precision();
  void set_allocated_precision(::io::substrait::ParameterizedType_IntegerOption* precision);
  private:
  const ::io::substrait::ParameterizedType_IntegerOption& _internal_precision() const;
  ::io::substrait::ParameterizedType_IntegerOption* _internal_mutable_precision();
  public:
  void unsafe_arena_set_allocated_precision(
      ::io::substrait::ParameterizedType_IntegerOption* precision);
  ::io::substrait::ParameterizedType_IntegerOption* unsafe_arena_release_precision();

  // .io.substrait.Type.Variation variation = 3;
  bool has_variation() const;
  private:
  bool _internal_has_variation() const;
  public:
  void clear_variation();
  const ::io::substrait::Type_Variation& variation() const;
  ::io::substrait::Type_Variation* release_variation();
  ::io::substrait::Type_Variation* mutable_variation();
  void set_allocated_variation(::io::substrait::Type_Variation* variation);
  private:
  const ::io::substrait::Type_Variation& _internal_variation() const;
  ::io::substrait::Type_Variation* _internal_mutable_variation();
  public:
  void unsafe_arena_set_allocated_variation(
      ::io::substrait::Type_Variation* variation);
  ::io::substrait::Type_Variation* unsafe_arena_release_variation();

  // .io.substrait.Type.Nullability nullability = 4;
  void clear_nullability();
  ::io::substrait::Type_Nullability nullability() const;
  void set_nullability(::io::substrait::Type_Nullability value);
  private:
  ::io::substrait::Type_Nullability _internal_nullability() const;
  void _internal_set_nullability(::io::substrait::Type_Nullability value);
  public:

  // @@protoc_insertion_point(class_scope:io.substrait.ParameterizedType.ParameterizedDecimal)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::io::substrait::ParameterizedType_IntegerOption* scale_;
  ::io::substrait::ParameterizedType_IntegerOption* precision_;
  ::io::substrait::Type_Variation* variation_;
  int nullability_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_parameterized_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedStruct PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.substrait.ParameterizedType.ParameterizedStruct) */ {
 public:
  inline ParameterizedType_ParameterizedStruct() : ParameterizedType_ParameterizedStruct(nullptr) {}
  ~ParameterizedType_ParameterizedStruct() override;
  explicit constexpr ParameterizedType_ParameterizedStruct(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterizedType_ParameterizedStruct(const ParameterizedType_ParameterizedStruct& from);
  ParameterizedType_ParameterizedStruct(ParameterizedType_ParameterizedStruct&& from) noexcept
    : ParameterizedType_ParameterizedStruct() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedStruct& operator=(const ParameterizedType_ParameterizedStruct& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterizedType_ParameterizedStruct& operator=(ParameterizedType_ParameterizedStruct&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterizedType_ParameterizedStruct& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParameterizedType_ParameterizedStruct* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedStruct*>(
               &_ParameterizedType_ParameterizedStruct_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ParameterizedType_ParameterizedStruct& a, ParameterizedType_ParameterizedStruct& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterizedType_ParameterizedStruct* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterizedType_ParameterizedStruct* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedStruct* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedStruct>(nullptr);
  }

  ParameterizedType_ParameterizedStruct* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedStruct>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedStruct& from);
  void MergeFrom(const ParameterizedType_ParameterizedStruct& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedStruct* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.substrait.ParameterizedType.ParameterizedStruct";
  }
  protected:
  explicit ParameterizedType_ParameterizedStruct(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypesFieldNumber = 1,
    kVariationFieldNumber = 2,
    kNullabilityFieldNumber = 3,
  };
  // repeated .io.substrait.ParameterizedType types = 1;
  int types_size() const;
  private:
  int _internal_types_size() const;
  public:
  void clear_types();
  ::io::substrait::ParameterizedType* mutable_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::io::substrait::ParameterizedType >*
      mutable_types();
  private:
  const ::io::substrait::ParameterizedType& _internal_types(int index) const;
  ::io::substrait::ParameterizedType* _internal_add_types();
  public:
  const ::io::substrait::ParameterizedType& types(int index) const;
  ::io::substrait::ParameterizedType* add_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::io::substrait::ParameterizedType >&
      types() const;

  // .io.substrait.Type.Variation variation = 2;
  bool has_variation() const;
  private:
  bool _internal_has_variation() const;
  public:
  void clear_variation();
  const ::io::substrait::Type_Variation& variation() const;
  ::io::substrait::Type_Variation* release_variation();
  ::io::substrait::Type_Variation* mutable_variation();
  void set_allocated_variation(::io::substrait::Type_Variation* variation);
  private:
  const ::io::substrait::Type_Variation& _internal_variation() const;
  ::io::substrait::Type_Variation* _internal_mutable_variation();
  public:
  void unsafe_arena_set_allocated_variation(
      ::io::substrait::Type_Variation* variation);
  ::io::substrait::Type_Variation* unsafe_arena_release_variation();

  // .io.substrait.Type.Nullability nullability = 3;
  void clear_nullability();
  ::io::substrait::Type_Nullability nullability() const;
  void set_nullability(::io::substrait::Type_Nullability value);
  private:
  ::io::substrait::Type_Nullability _internal_nullability() const;
  void _internal_set_nullability(::io::substrait::Type_Nullability value);
  public:

  // @@protoc_insertion_point(class_scope:io.substrait.ParameterizedType.ParameterizedStruct)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::io::substrait::ParameterizedType > types_;
  ::io::substrait::Type_Variation* variation_;
  int nullability_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_parameterized_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedNamedStruct PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.substrait.ParameterizedType.ParameterizedNamedStruct) */ {
 public:
  inline ParameterizedType_ParameterizedNamedStruct() : ParameterizedType_ParameterizedNamedStruct(nullptr) {}
  ~ParameterizedType_ParameterizedNamedStruct() override;
  explicit constexpr ParameterizedType_ParameterizedNamedStruct(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterizedType_ParameterizedNamedStruct(const ParameterizedType_ParameterizedNamedStruct& from);
  ParameterizedType_ParameterizedNamedStruct(ParameterizedType_ParameterizedNamedStruct&& from) noexcept
    : ParameterizedType_ParameterizedNamedStruct() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedNamedStruct& operator=(const ParameterizedType_ParameterizedNamedStruct& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterizedType_ParameterizedNamedStruct& operator=(ParameterizedType_ParameterizedNamedStruct&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterizedType_ParameterizedNamedStruct& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParameterizedType_ParameterizedNamedStruct* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedNamedStruct*>(
               &_ParameterizedType_ParameterizedNamedStruct_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ParameterizedType_ParameterizedNamedStruct& a, ParameterizedType_ParameterizedNamedStruct& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterizedType_ParameterizedNamedStruct* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterizedType_ParameterizedNamedStruct* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedNamedStruct* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedNamedStruct>(nullptr);
  }

  ParameterizedType_ParameterizedNamedStruct* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedNamedStruct>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedNamedStruct& from);
  void MergeFrom(const ParameterizedType_ParameterizedNamedStruct& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedNamedStruct* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.substrait.ParameterizedType.ParameterizedNamedStruct";
  }
  protected:
  explicit ParameterizedType_ParameterizedNamedStruct(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNamesFieldNumber = 1,
    kStructFieldNumber = 2,
  };
  // repeated string names = 1;
  int names_size() const;
  private:
  int _internal_names_size() const;
  public:
  void clear_names();
  const std::string& names(int index) const;
  std::string* mutable_names(int index);
  void set_names(int index, const std::string& value);
  void set_names(int index, std::string&& value);
  void set_names(int index, const char* value);
  void set_names(int index, const char* value, size_t size);
  std::string* add_names();
  void add_names(const std::string& value);
  void add_names(std::string&& value);
  void add_names(const char* value);
  void add_names(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& names() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_names();
  private:
  const std::string& _internal_names(int index) const;
  std::string* _internal_add_names();
  public:

  // .io.substrait.ParameterizedType.ParameterizedStruct struct = 2;
  bool has_struct_() const;
  private:
  bool _internal_has_struct_() const;
  public:
  void clear_struct_();
  const ::io::substrait::ParameterizedType_ParameterizedStruct& struct_() const;
  ::io::substrait::ParameterizedType_ParameterizedStruct* release_struct_();
  ::io::substrait::ParameterizedType_ParameterizedStruct* mutable_struct_();
  void set_allocated_struct_(::io::substrait::ParameterizedType_ParameterizedStruct* struct_);
  private:
  const ::io::substrait::ParameterizedType_ParameterizedStruct& _internal_struct_() const;
  ::io::substrait::ParameterizedType_ParameterizedStruct* _internal_mutable_struct_();
  public:
  void unsafe_arena_set_allocated_struct_(
      ::io::substrait::ParameterizedType_ParameterizedStruct* struct_);
  ::io::substrait::ParameterizedType_ParameterizedStruct* unsafe_arena_release_struct_();

  // @@protoc_insertion_point(class_scope:io.substrait.ParameterizedType.ParameterizedNamedStruct)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> names_;
  ::io::substrait::ParameterizedType_ParameterizedStruct* struct__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_parameterized_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedList PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.substrait.ParameterizedType.ParameterizedList) */ {
 public:
  inline ParameterizedType_ParameterizedList() : ParameterizedType_ParameterizedList(nullptr) {}
  ~ParameterizedType_ParameterizedList() override;
  explicit constexpr ParameterizedType_ParameterizedList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterizedType_ParameterizedList(const ParameterizedType_ParameterizedList& from);
  ParameterizedType_ParameterizedList(ParameterizedType_ParameterizedList&& from) noexcept
    : ParameterizedType_ParameterizedList() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedList& operator=(const ParameterizedType_ParameterizedList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterizedType_ParameterizedList& operator=(ParameterizedType_ParameterizedList&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterizedType_ParameterizedList& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParameterizedType_ParameterizedList* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedList*>(
               &_ParameterizedType_ParameterizedList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ParameterizedType_ParameterizedList& a, ParameterizedType_ParameterizedList& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterizedType_ParameterizedList* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterizedType_ParameterizedList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedList* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedList>(nullptr);
  }

  ParameterizedType_ParameterizedList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedList& from);
  void MergeFrom(const ParameterizedType_ParameterizedList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.substrait.ParameterizedType.ParameterizedList";
  }
  protected:
  explicit ParameterizedType_ParameterizedList(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kVariationFieldNumber = 2,
    kNullabilityFieldNumber = 3,
  };
  // .io.substrait.ParameterizedType type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  const ::io::substrait::ParameterizedType& type() const;
  ::io::substrait::ParameterizedType* release_type();
  ::io::substrait::ParameterizedType* mutable_type();
  void set_allocated_type(::io::substrait::ParameterizedType* type);
  private:
  const ::io::substrait::ParameterizedType& _internal_type() const;
  ::io::substrait::ParameterizedType* _internal_mutable_type();
  public:
  void unsafe_arena_set_allocated_type(
      ::io::substrait::ParameterizedType* type);
  ::io::substrait::ParameterizedType* unsafe_arena_release_type();

  // .io.substrait.Type.Variation variation = 2;
  bool has_variation() const;
  private:
  bool _internal_has_variation() const;
  public:
  void clear_variation();
  const ::io::substrait::Type_Variation& variation() const;
  ::io::substrait::Type_Variation* release_variation();
  ::io::substrait::Type_Variation* mutable_variation();
  void set_allocated_variation(::io::substrait::Type_Variation* variation);
  private:
  const ::io::substrait::Type_Variation& _internal_variation() const;
  ::io::substrait::Type_Variation* _internal_mutable_variation();
  public:
  void unsafe_arena_set_allocated_variation(
      ::io::substrait::Type_Variation* variation);
  ::io::substrait::Type_Variation* unsafe_arena_release_variation();

  // .io.substrait.Type.Nullability nullability = 3;
  void clear_nullability();
  ::io::substrait::Type_Nullability nullability() const;
  void set_nullability(::io::substrait::Type_Nullability value);
  private:
  ::io::substrait::Type_Nullability _internal_nullability() const;
  void _internal_set_nullability(::io::substrait::Type_Nullability value);
  public:

  // @@protoc_insertion_point(class_scope:io.substrait.ParameterizedType.ParameterizedList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::io::substrait::ParameterizedType* type_;
  ::io::substrait::Type_Variation* variation_;
  int nullability_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_parameterized_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedMap PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.substrait.ParameterizedType.ParameterizedMap) */ {
 public:
  inline ParameterizedType_ParameterizedMap() : ParameterizedType_ParameterizedMap(nullptr) {}
  ~ParameterizedType_ParameterizedMap() override;
  explicit constexpr ParameterizedType_ParameterizedMap(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterizedType_ParameterizedMap(const ParameterizedType_ParameterizedMap& from);
  ParameterizedType_ParameterizedMap(ParameterizedType_ParameterizedMap&& from) noexcept
    : ParameterizedType_ParameterizedMap() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedMap& operator=(const ParameterizedType_ParameterizedMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterizedType_ParameterizedMap& operator=(ParameterizedType_ParameterizedMap&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterizedType_ParameterizedMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParameterizedType_ParameterizedMap* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedMap*>(
               &_ParameterizedType_ParameterizedMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ParameterizedType_ParameterizedMap& a, ParameterizedType_ParameterizedMap& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterizedType_ParameterizedMap* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterizedType_ParameterizedMap* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedMap* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedMap>(nullptr);
  }

  ParameterizedType_ParameterizedMap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedMap>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedMap& from);
  void MergeFrom(const ParameterizedType_ParameterizedMap& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedMap* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.substrait.ParameterizedType.ParameterizedMap";
  }
  protected:
  explicit ParameterizedType_ParameterizedMap(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
    kVariationFieldNumber = 3,
    kNullabilityFieldNumber = 4,
  };
  // .io.substrait.ParameterizedType key = 1;
  bool has_key() const;
  private:
  bool _internal_has_key() const;
  public:
  void clear_key();
  const ::io::substrait::ParameterizedType& key() const;
  ::io::substrait::ParameterizedType* release_key();
  ::io::substrait::ParameterizedType* mutable_key();
  void set_allocated_key(::io::substrait::ParameterizedType* key);
  private:
  const ::io::substrait::ParameterizedType& _internal_key() const;
  ::io::substrait::ParameterizedType* _internal_mutable_key();
  public:
  void unsafe_arena_set_allocated_key(
      ::io::substrait::ParameterizedType* key);
  ::io::substrait::ParameterizedType* unsafe_arena_release_key();

  // .io.substrait.ParameterizedType value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::io::substrait::ParameterizedType& value() const;
  ::io::substrait::ParameterizedType* release_value();
  ::io::substrait::ParameterizedType* mutable_value();
  void set_allocated_value(::io::substrait::ParameterizedType* value);
  private:
  const ::io::substrait::ParameterizedType& _internal_value() const;
  ::io::substrait::ParameterizedType* _internal_mutable_value();
  public:
  void unsafe_arena_set_allocated_value(
      ::io::substrait::ParameterizedType* value);
  ::io::substrait::ParameterizedType* unsafe_arena_release_value();

  // .io.substrait.Type.Variation variation = 3;
  bool has_variation() const;
  private:
  bool _internal_has_variation() const;
  public:
  void clear_variation();
  const ::io::substrait::Type_Variation& variation() const;
  ::io::substrait::Type_Variation* release_variation();
  ::io::substrait::Type_Variation* mutable_variation();
  void set_allocated_variation(::io::substrait::Type_Variation* variation);
  private:
  const ::io::substrait::Type_Variation& _internal_variation() const;
  ::io::substrait::Type_Variation* _internal_mutable_variation();
  public:
  void unsafe_arena_set_allocated_variation(
      ::io::substrait::Type_Variation* variation);
  ::io::substrait::Type_Variation* unsafe_arena_release_variation();

  // .io.substrait.Type.Nullability nullability = 4;
  void clear_nullability();
  ::io::substrait::Type_Nullability nullability() const;
  void set_nullability(::io::substrait::Type_Nullability value);
  private:
  ::io::substrait::Type_Nullability _internal_nullability() const;
  void _internal_set_nullability(::io::substrait::Type_Nullability value);
  public:

  // @@protoc_insertion_point(class_scope:io.substrait.ParameterizedType.ParameterizedMap)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::io::substrait::ParameterizedType* key_;
  ::io::substrait::ParameterizedType* value_;
  ::io::substrait::Type_Variation* variation_;
  int nullability_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_parameterized_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class ParameterizedType_IntegerOption PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.substrait.ParameterizedType.IntegerOption) */ {
 public:
  inline ParameterizedType_IntegerOption() : ParameterizedType_IntegerOption(nullptr) {}
  ~ParameterizedType_IntegerOption() override;
  explicit constexpr ParameterizedType_IntegerOption(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterizedType_IntegerOption(const ParameterizedType_IntegerOption& from);
  ParameterizedType_IntegerOption(ParameterizedType_IntegerOption&& from) noexcept
    : ParameterizedType_IntegerOption() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_IntegerOption& operator=(const ParameterizedType_IntegerOption& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterizedType_IntegerOption& operator=(ParameterizedType_IntegerOption&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterizedType_IntegerOption& default_instance() {
    return *internal_default_instance();
  }
  enum IntegerTypeCase {
    kLiteral = 1,
    kParameter = 2,
    INTEGER_TYPE_NOT_SET = 0,
  };

  static inline const ParameterizedType_IntegerOption* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_IntegerOption*>(
               &_ParameterizedType_IntegerOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ParameterizedType_IntegerOption& a, ParameterizedType_IntegerOption& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterizedType_IntegerOption* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterizedType_IntegerOption* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_IntegerOption* New() const final {
    return CreateMaybeMessage<ParameterizedType_IntegerOption>(nullptr);
  }

  ParameterizedType_IntegerOption* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_IntegerOption>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParameterizedType_IntegerOption& from);
  void MergeFrom(const ParameterizedType_IntegerOption& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_IntegerOption* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.substrait.ParameterizedType.IntegerOption";
  }
  protected:
  explicit ParameterizedType_IntegerOption(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLiteralFieldNumber = 1,
    kParameterFieldNumber = 2,
  };
  // int32 literal = 1;
  bool has_literal() const;
  private:
  bool _internal_has_literal() const;
  public:
  void clear_literal();
  ::PROTOBUF_NAMESPACE_ID::int32 literal() const;
  void set_literal(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_literal() const;
  void _internal_set_literal(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .io.substrait.ParameterizedType.IntegerParameter parameter = 2;
  bool has_parameter() const;
  private:
  bool _internal_has_parameter() const;
  public:
  void clear_parameter();
  const ::io::substrait::ParameterizedType_IntegerParameter& parameter() const;
  ::io::substrait::ParameterizedType_IntegerParameter* release_parameter();
  ::io::substrait::ParameterizedType_IntegerParameter* mutable_parameter();
  void set_allocated_parameter(::io::substrait::ParameterizedType_IntegerParameter* parameter);
  private:
  const ::io::substrait::ParameterizedType_IntegerParameter& _internal_parameter() const;
  ::io::substrait::ParameterizedType_IntegerParameter* _internal_mutable_parameter();
  public:
  void unsafe_arena_set_allocated_parameter(
      ::io::substrait::ParameterizedType_IntegerParameter* parameter);
  ::io::substrait::ParameterizedType_IntegerParameter* unsafe_arena_release_parameter();

  void clear_integer_type();
  IntegerTypeCase integer_type_case() const;
  // @@protoc_insertion_point(class_scope:io.substrait.ParameterizedType.IntegerOption)
 private:
  class _Internal;
  void set_has_literal();
  void set_has_parameter();

  inline bool has_integer_type() const;
  inline void clear_has_integer_type();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union IntegerTypeUnion {
    constexpr IntegerTypeUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::PROTOBUF_NAMESPACE_ID::int32 literal_;
    ::io::substrait::ParameterizedType_IntegerParameter* parameter_;
  } integer_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_parameterized_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class ParameterizedType PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.substrait.ParameterizedType) */ {
 public:
  inline ParameterizedType() : ParameterizedType(nullptr) {}
  ~ParameterizedType() override;
  explicit constexpr ParameterizedType(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterizedType(const ParameterizedType& from);
  ParameterizedType(ParameterizedType&& from) noexcept
    : ParameterizedType() {
    *this = ::std::move(from);
  }

  inline ParameterizedType& operator=(const ParameterizedType& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterizedType& operator=(ParameterizedType&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterizedType& default_instance() {
    return *internal_default_instance();
  }
  enum KindCase {
    kBool = 1,
    kI8 = 2,
    kI16 = 3,
    kI32 = 5,
    kI64 = 7,
    kFp32 = 10,
    kFp64 = 11,
    kString = 12,
    kBinary = 13,
    kTimestamp = 14,
    kDate = 16,
    kTime = 17,
    kIntervalYear = 19,
    kIntervalDay = 20,
    kTimestampTz = 29,
    kUuid = 32,
    kFixedChar = 21,
    kVarchar = 22,
    kFixedBinary = 23,
    kDecimal = 24,
    kStruct = 25,
    kList = 27,
    kMap = 28,
    kUserDefined = 31,
    kTypeParameter = 33,
    KIND_NOT_SET = 0,
  };

  static inline const ParameterizedType* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType*>(
               &_ParameterizedType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ParameterizedType& a, ParameterizedType& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterizedType* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterizedType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType* New() const final {
    return CreateMaybeMessage<ParameterizedType>(nullptr);
  }

  ParameterizedType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParameterizedType& from);
  void MergeFrom(const ParameterizedType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.substrait.ParameterizedType";
  }
  protected:
  explicit ParameterizedType(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ParameterizedType_TypeParameter TypeParameter;
  typedef ParameterizedType_IntegerParameter IntegerParameter;
  typedef ParameterizedType_NullableInteger NullableInteger;
  typedef ParameterizedType_ParameterizedFixedChar ParameterizedFixedChar;
  typedef ParameterizedType_ParameterizedVarChar ParameterizedVarChar;
  typedef ParameterizedType_ParameterizedFixedBinary ParameterizedFixedBinary;
  typedef ParameterizedType_ParameterizedDecimal ParameterizedDecimal;
  typedef ParameterizedType_ParameterizedStruct ParameterizedStruct;
  typedef ParameterizedType_ParameterizedNamedStruct ParameterizedNamedStruct;
  typedef ParameterizedType_ParameterizedList ParameterizedList;
  typedef ParameterizedType_ParameterizedMap ParameterizedMap;
  typedef ParameterizedType_IntegerOption IntegerOption;

  // accessors -------------------------------------------------------

  enum : int {
    kBoolFieldNumber = 1,
    kI8FieldNumber = 2,
    kI16FieldNumber = 3,
    kI32FieldNumber = 5,
    kI64FieldNumber = 7,
    kFp32FieldNumber = 10,
    kFp64FieldNumber = 11,
    kStringFieldNumber = 12,
    kBinaryFieldNumber = 13,
    kTimestampFieldNumber = 14,
    kDateFieldNumber = 16,
    kTimeFieldNumber = 17,
    kIntervalYearFieldNumber = 19,
    kIntervalDayFieldNumber = 20,
    kTimestampTzFieldNumber = 29,
    kUuidFieldNumber = 32,
    kFixedCharFieldNumber = 21,
    kVarcharFieldNumber = 22,
    kFixedBinaryFieldNumber = 23,
    kDecimalFieldNumber = 24,
    kStructFieldNumber = 25,
    kListFieldNumber = 27,
    kMapFieldNumber = 28,
    kUserDefinedFieldNumber = 31,
    kTypeParameterFieldNumber = 33,
  };
  // .io.substrait.Type.Boolean bool = 1;
  bool has_bool_() const;
  private:
  bool _internal_has_bool_() const;
  public:
  void clear_bool_();
  const ::io::substrait::Type_Boolean& bool_() const;
  ::io::substrait::Type_Boolean* release_bool_();
  ::io::substrait::Type_Boolean* mutable_bool_();
  void set_allocated_bool_(::io::substrait::Type_Boolean* bool_);
  private:
  const ::io::substrait::Type_Boolean& _internal_bool_() const;
  ::io::substrait::Type_Boolean* _internal_mutable_bool_();
  public:
  void unsafe_arena_set_allocated_bool_(
      ::io::substrait::Type_Boolean* bool_);
  ::io::substrait::Type_Boolean* unsafe_arena_release_bool_();

  // .io.substrait.Type.I8 i8 = 2;
  bool has_i8() const;
  private:
  bool _internal_has_i8() const;
  public:
  void clear_i8();
  const ::io::substrait::Type_I8& i8() const;
  ::io::substrait::Type_I8* release_i8();
  ::io::substrait::Type_I8* mutable_i8();
  void set_allocated_i8(::io::substrait::Type_I8* i8);
  private:
  const ::io::substrait::Type_I8& _internal_i8() const;
  ::io::substrait::Type_I8* _internal_mutable_i8();
  public:
  void unsafe_arena_set_allocated_i8(
      ::io::substrait::Type_I8* i8);
  ::io::substrait::Type_I8* unsafe_arena_release_i8();

  // .io.substrait.Type.I16 i16 = 3;
  bool has_i16() const;
  private:
  bool _internal_has_i16() const;
  public:
  void clear_i16();
  const ::io::substrait::Type_I16& i16() const;
  ::io::substrait::Type_I16* release_i16();
  ::io::substrait::Type_I16* mutable_i16();
  void set_allocated_i16(::io::substrait::Type_I16* i16);
  private:
  const ::io::substrait::Type_I16& _internal_i16() const;
  ::io::substrait::Type_I16* _internal_mutable_i16();
  public:
  void unsafe_arena_set_allocated_i16(
      ::io::substrait::Type_I16* i16);
  ::io::substrait::Type_I16* unsafe_arena_release_i16();

  // .io.substrait.Type.I32 i32 = 5;
  bool has_i32() const;
  private:
  bool _internal_has_i32() const;
  public:
  void clear_i32();
  const ::io::substrait::Type_I32& i32() const;
  ::io::substrait::Type_I32* release_i32();
  ::io::substrait::Type_I32* mutable_i32();
  void set_allocated_i32(::io::substrait::Type_I32* i32);
  private:
  const ::io::substrait::Type_I32& _internal_i32() const;
  ::io::substrait::Type_I32* _internal_mutable_i32();
  public:
  void unsafe_arena_set_allocated_i32(
      ::io::substrait::Type_I32* i32);
  ::io::substrait::Type_I32* unsafe_arena_release_i32();

  // .io.substrait.Type.I64 i64 = 7;
  bool has_i64() const;
  private:
  bool _internal_has_i64() const;
  public:
  void clear_i64();
  const ::io::substrait::Type_I64& i64() const;
  ::io::substrait::Type_I64* release_i64();
  ::io::substrait::Type_I64* mutable_i64();
  void set_allocated_i64(::io::substrait::Type_I64* i64);
  private:
  const ::io::substrait::Type_I64& _internal_i64() const;
  ::io::substrait::Type_I64* _internal_mutable_i64();
  public:
  void unsafe_arena_set_allocated_i64(
      ::io::substrait::Type_I64* i64);
  ::io::substrait::Type_I64* unsafe_arena_release_i64();

  // .io.substrait.Type.FP32 fp32 = 10;
  bool has_fp32() const;
  private:
  bool _internal_has_fp32() const;
  public:
  void clear_fp32();
  const ::io::substrait::Type_FP32& fp32() const;
  ::io::substrait::Type_FP32* release_fp32();
  ::io::substrait::Type_FP32* mutable_fp32();
  void set_allocated_fp32(::io::substrait::Type_FP32* fp32);
  private:
  const ::io::substrait::Type_FP32& _internal_fp32() const;
  ::io::substrait::Type_FP32* _internal_mutable_fp32();
  public:
  void unsafe_arena_set_allocated_fp32(
      ::io::substrait::Type_FP32* fp32);
  ::io::substrait::Type_FP32* unsafe_arena_release_fp32();

  // .io.substrait.Type.FP64 fp64 = 11;
  bool has_fp64() const;
  private:
  bool _internal_has_fp64() const;
  public:
  void clear_fp64();
  const ::io::substrait::Type_FP64& fp64() const;
  ::io::substrait::Type_FP64* release_fp64();
  ::io::substrait::Type_FP64* mutable_fp64();
  void set_allocated_fp64(::io::substrait::Type_FP64* fp64);
  private:
  const ::io::substrait::Type_FP64& _internal_fp64() const;
  ::io::substrait::Type_FP64* _internal_mutable_fp64();
  public:
  void unsafe_arena_set_allocated_fp64(
      ::io::substrait::Type_FP64* fp64);
  ::io::substrait::Type_FP64* unsafe_arena_release_fp64();

  // .io.substrait.Type.String string = 12;
  bool has_string() const;
  private:
  bool _internal_has_string() const;
  public:
  void clear_string();
  const ::io::substrait::Type_String& string() const;
  ::io::substrait::Type_String* release_string();
  ::io::substrait::Type_String* mutable_string();
  void set_allocated_string(::io::substrait::Type_String* string);
  private:
  const ::io::substrait::Type_String& _internal_string() const;
  ::io::substrait::Type_String* _internal_mutable_string();
  public:
  void unsafe_arena_set_allocated_string(
      ::io::substrait::Type_String* string);
  ::io::substrait::Type_String* unsafe_arena_release_string();

  // .io.substrait.Type.Binary binary = 13;
  bool has_binary() const;
  private:
  bool _internal_has_binary() const;
  public:
  void clear_binary();
  const ::io::substrait::Type_Binary& binary() const;
  ::io::substrait::Type_Binary* release_binary();
  ::io::substrait::Type_Binary* mutable_binary();
  void set_allocated_binary(::io::substrait::Type_Binary* binary);
  private:
  const ::io::substrait::Type_Binary& _internal_binary() const;
  ::io::substrait::Type_Binary* _internal_mutable_binary();
  public:
  void unsafe_arena_set_allocated_binary(
      ::io::substrait::Type_Binary* binary);
  ::io::substrait::Type_Binary* unsafe_arena_release_binary();

  // .io.substrait.Type.Timestamp timestamp = 14;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  const ::io::substrait::Type_Timestamp& timestamp() const;
  ::io::substrait::Type_Timestamp* release_timestamp();
  ::io::substrait::Type_Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::io::substrait::Type_Timestamp* timestamp);
  private:
  const ::io::substrait::Type_Timestamp& _internal_timestamp() const;
  ::io::substrait::Type_Timestamp* _internal_mutable_timestamp();
  public:
  void unsafe_arena_set_allocated_timestamp(
      ::io::substrait::Type_Timestamp* timestamp);
  ::io::substrait::Type_Timestamp* unsafe_arena_release_timestamp();

  // .io.substrait.Type.Date date = 16;
  bool has_date() const;
  private:
  bool _internal_has_date() const;
  public:
  void clear_date();
  const ::io::substrait::Type_Date& date() const;
  ::io::substrait::Type_Date* release_date();
  ::io::substrait::Type_Date* mutable_date();
  void set_allocated_date(::io::substrait::Type_Date* date);
  private:
  const ::io::substrait::Type_Date& _internal_date() const;
  ::io::substrait::Type_Date* _internal_mutable_date();
  public:
  void unsafe_arena_set_allocated_date(
      ::io::substrait::Type_Date* date);
  ::io::substrait::Type_Date* unsafe_arena_release_date();

  // .io.substrait.Type.Time time = 17;
  bool has_time() const;
  private:
  bool _internal_has_time() const;
  public:
  void clear_time();
  const ::io::substrait::Type_Time& time() const;
  ::io::substrait::Type_Time* release_time();
  ::io::substrait::Type_Time* mutable_time();
  void set_allocated_time(::io::substrait::Type_Time* time);
  private:
  const ::io::substrait::Type_Time& _internal_time() const;
  ::io::substrait::Type_Time* _internal_mutable_time();
  public:
  void unsafe_arena_set_allocated_time(
      ::io::substrait::Type_Time* time);
  ::io::substrait::Type_Time* unsafe_arena_release_time();

  // .io.substrait.Type.IntervalYear interval_year = 19;
  bool has_interval_year() const;
  private:
  bool _internal_has_interval_year() const;
  public:
  void clear_interval_year();
  const ::io::substrait::Type_IntervalYear& interval_year() const;
  ::io::substrait::Type_IntervalYear* release_interval_year();
  ::io::substrait::Type_IntervalYear* mutable_interval_year();
  void set_allocated_interval_year(::io::substrait::Type_IntervalYear* interval_year);
  private:
  const ::io::substrait::Type_IntervalYear& _internal_interval_year() const;
  ::io::substrait::Type_IntervalYear* _internal_mutable_interval_year();
  public:
  void unsafe_arena_set_allocated_interval_year(
      ::io::substrait::Type_IntervalYear* interval_year);
  ::io::substrait::Type_IntervalYear* unsafe_arena_release_interval_year();

  // .io.substrait.Type.IntervalDay interval_day = 20;
  bool has_interval_day() const;
  private:
  bool _internal_has_interval_day() const;
  public:
  void clear_interval_day();
  const ::io::substrait::Type_IntervalDay& interval_day() const;
  ::io::substrait::Type_IntervalDay* release_interval_day();
  ::io::substrait::Type_IntervalDay* mutable_interval_day();
  void set_allocated_interval_day(::io::substrait::Type_IntervalDay* interval_day);
  private:
  const ::io::substrait::Type_IntervalDay& _internal_interval_day() const;
  ::io::substrait::Type_IntervalDay* _internal_mutable_interval_day();
  public:
  void unsafe_arena_set_allocated_interval_day(
      ::io::substrait::Type_IntervalDay* interval_day);
  ::io::substrait::Type_IntervalDay* unsafe_arena_release_interval_day();

  // .io.substrait.Type.TimestampTZ timestamp_tz = 29;
  bool has_timestamp_tz() const;
  private:
  bool _internal_has_timestamp_tz() const;
  public:
  void clear_timestamp_tz();
  const ::io::substrait::Type_TimestampTZ& timestamp_tz() const;
  ::io::substrait::Type_TimestampTZ* release_timestamp_tz();
  ::io::substrait::Type_TimestampTZ* mutable_timestamp_tz();
  void set_allocated_timestamp_tz(::io::substrait::Type_TimestampTZ* timestamp_tz);
  private:
  const ::io::substrait::Type_TimestampTZ& _internal_timestamp_tz() const;
  ::io::substrait::Type_TimestampTZ* _internal_mutable_timestamp_tz();
  public:
  void unsafe_arena_set_allocated_timestamp_tz(
      ::io::substrait::Type_TimestampTZ* timestamp_tz);
  ::io::substrait::Type_TimestampTZ* unsafe_arena_release_timestamp_tz();

  // .io.substrait.Type.UUID uuid = 32;
  bool has_uuid() const;
  private:
  bool _internal_has_uuid() const;
  public:
  void clear_uuid();
  const ::io::substrait::Type_UUID& uuid() const;
  ::io::substrait::Type_UUID* release_uuid();
  ::io::substrait::Type_UUID* mutable_uuid();
  void set_allocated_uuid(::io::substrait::Type_UUID* uuid);
  private:
  const ::io::substrait::Type_UUID& _internal_uuid() const;
  ::io::substrait::Type_UUID* _internal_mutable_uuid();
  public:
  void unsafe_arena_set_allocated_uuid(
      ::io::substrait::Type_UUID* uuid);
  ::io::substrait::Type_UUID* unsafe_arena_release_uuid();

  // .io.substrait.ParameterizedType.ParameterizedFixedChar fixed_char = 21;
  bool has_fixed_char() const;
  private:
  bool _internal_has_fixed_char() const;
  public:
  void clear_fixed_char();
  const ::io::substrait::ParameterizedType_ParameterizedFixedChar& fixed_char() const;
  ::io::substrait::ParameterizedType_ParameterizedFixedChar* release_fixed_char();
  ::io::substrait::ParameterizedType_ParameterizedFixedChar* mutable_fixed_char();
  void set_allocated_fixed_char(::io::substrait::ParameterizedType_ParameterizedFixedChar* fixed_char);
  private:
  const ::io::substrait::ParameterizedType_ParameterizedFixedChar& _internal_fixed_char() const;
  ::io::substrait::ParameterizedType_ParameterizedFixedChar* _internal_mutable_fixed_char();
  public:
  void unsafe_arena_set_allocated_fixed_char(
      ::io::substrait::ParameterizedType_ParameterizedFixedChar* fixed_char);
  ::io::substrait::ParameterizedType_ParameterizedFixedChar* unsafe_arena_release_fixed_char();

  // .io.substrait.ParameterizedType.ParameterizedVarChar varchar = 22;
  bool has_varchar() const;
  private:
  bool _internal_has_varchar() const;
  public:
  void clear_varchar();
  const ::io::substrait::ParameterizedType_ParameterizedVarChar& varchar() const;
  ::io::substrait::ParameterizedType_ParameterizedVarChar* release_varchar();
  ::io::substrait::ParameterizedType_ParameterizedVarChar* mutable_varchar();
  void set_allocated_varchar(::io::substrait::ParameterizedType_ParameterizedVarChar* varchar);
  private:
  const ::io::substrait::ParameterizedType_ParameterizedVarChar& _internal_varchar() const;
  ::io::substrait::ParameterizedType_ParameterizedVarChar* _internal_mutable_varchar();
  public:
  void unsafe_arena_set_allocated_varchar(
      ::io::substrait::ParameterizedType_ParameterizedVarChar* varchar);
  ::io::substrait::ParameterizedType_ParameterizedVarChar* unsafe_arena_release_varchar();

  // .io.substrait.ParameterizedType.ParameterizedFixedBinary fixed_binary = 23;
  bool has_fixed_binary() const;
  private:
  bool _internal_has_fixed_binary() const;
  public:
  void clear_fixed_binary();
  const ::io::substrait::ParameterizedType_ParameterizedFixedBinary& fixed_binary() const;
  ::io::substrait::ParameterizedType_ParameterizedFixedBinary* release_fixed_binary();
  ::io::substrait::ParameterizedType_ParameterizedFixedBinary* mutable_fixed_binary();
  void set_allocated_fixed_binary(::io::substrait::ParameterizedType_ParameterizedFixedBinary* fixed_binary);
  private:
  const ::io::substrait::ParameterizedType_ParameterizedFixedBinary& _internal_fixed_binary() const;
  ::io::substrait::ParameterizedType_ParameterizedFixedBinary* _internal_mutable_fixed_binary();
  public:
  void unsafe_arena_set_allocated_fixed_binary(
      ::io::substrait::ParameterizedType_ParameterizedFixedBinary* fixed_binary);
  ::io::substrait::ParameterizedType_ParameterizedFixedBinary* unsafe_arena_release_fixed_binary();

  // .io.substrait.ParameterizedType.ParameterizedDecimal decimal = 24;
  bool has_decimal() const;
  private:
  bool _internal_has_decimal() const;
  public:
  void clear_decimal();
  const ::io::substrait::ParameterizedType_ParameterizedDecimal& decimal() const;
  ::io::substrait::ParameterizedType_ParameterizedDecimal* release_decimal();
  ::io::substrait::ParameterizedType_ParameterizedDecimal* mutable_decimal();
  void set_allocated_decimal(::io::substrait::ParameterizedType_ParameterizedDecimal* decimal);
  private:
  const ::io::substrait::ParameterizedType_ParameterizedDecimal& _internal_decimal() const;
  ::io::substrait::ParameterizedType_ParameterizedDecimal* _internal_mutable_decimal();
  public:
  void unsafe_arena_set_allocated_decimal(
      ::io::substrait::ParameterizedType_ParameterizedDecimal* decimal);
  ::io::substrait::ParameterizedType_ParameterizedDecimal* unsafe_arena_release_decimal();

  // .io.substrait.ParameterizedType.ParameterizedStruct struct = 25;
  bool has_struct_() const;
  private:
  bool _internal_has_struct_() const;
  public:
  void clear_struct_();
  const ::io::substrait::ParameterizedType_ParameterizedStruct& struct_() const;
  ::io::substrait::ParameterizedType_ParameterizedStruct* release_struct_();
  ::io::substrait::ParameterizedType_ParameterizedStruct* mutable_struct_();
  void set_allocated_struct_(::io::substrait::ParameterizedType_ParameterizedStruct* struct_);
  private:
  const ::io::substrait::ParameterizedType_ParameterizedStruct& _internal_struct_() const;
  ::io::substrait::ParameterizedType_ParameterizedStruct* _internal_mutable_struct_();
  public:
  void unsafe_arena_set_allocated_struct_(
      ::io::substrait::ParameterizedType_ParameterizedStruct* struct_);
  ::io::substrait::ParameterizedType_ParameterizedStruct* unsafe_arena_release_struct_();

  // .io.substrait.ParameterizedType.ParameterizedList list = 27;
  bool has_list() const;
  private:
  bool _internal_has_list() const;
  public:
  void clear_list();
  const ::io::substrait::ParameterizedType_ParameterizedList& list() const;
  ::io::substrait::ParameterizedType_ParameterizedList* release_list();
  ::io::substrait::ParameterizedType_ParameterizedList* mutable_list();
  void set_allocated_list(::io::substrait::ParameterizedType_ParameterizedList* list);
  private:
  const ::io::substrait::ParameterizedType_ParameterizedList& _internal_list() const;
  ::io::substrait::ParameterizedType_ParameterizedList* _internal_mutable_list();
  public:
  void unsafe_arena_set_allocated_list(
      ::io::substrait::ParameterizedType_ParameterizedList* list);
  ::io::substrait::ParameterizedType_ParameterizedList* unsafe_arena_release_list();

  // .io.substrait.ParameterizedType.ParameterizedMap map = 28;
  bool has_map() const;
  private:
  bool _internal_has_map() const;
  public:
  void clear_map();
  const ::io::substrait::ParameterizedType_ParameterizedMap& map() const;
  ::io::substrait::ParameterizedType_ParameterizedMap* release_map();
  ::io::substrait::ParameterizedType_ParameterizedMap* mutable_map();
  void set_allocated_map(::io::substrait::ParameterizedType_ParameterizedMap* map);
  private:
  const ::io::substrait::ParameterizedType_ParameterizedMap& _internal_map() const;
  ::io::substrait::ParameterizedType_ParameterizedMap* _internal_mutable_map();
  public:
  void unsafe_arena_set_allocated_map(
      ::io::substrait::ParameterizedType_ParameterizedMap* map);
  ::io::substrait::ParameterizedType_ParameterizedMap* unsafe_arena_release_map();

  // .io.substrait.Extensions.TypeId user_defined = 31;
  bool has_user_defined() const;
  private:
  bool _internal_has_user_defined() const;
  public:
  void clear_user_defined();
  const ::io::substrait::Extensions_TypeId& user_defined() const;
  ::io::substrait::Extensions_TypeId* release_user_defined();
  ::io::substrait::Extensions_TypeId* mutable_user_defined();
  void set_allocated_user_defined(::io::substrait::Extensions_TypeId* user_defined);
  private:
  const ::io::substrait::Extensions_TypeId& _internal_user_defined() const;
  ::io::substrait::Extensions_TypeId* _internal_mutable_user_defined();
  public:
  void unsafe_arena_set_allocated_user_defined(
      ::io::substrait::Extensions_TypeId* user_defined);
  ::io::substrait::Extensions_TypeId* unsafe_arena_release_user_defined();

  // .io.substrait.ParameterizedType.TypeParameter type_parameter = 33;
  bool has_type_parameter() const;
  private:
  bool _internal_has_type_parameter() const;
  public:
  void clear_type_parameter();
  const ::io::substrait::ParameterizedType_TypeParameter& type_parameter() const;
  ::io::substrait::ParameterizedType_TypeParameter* release_type_parameter();
  ::io::substrait::ParameterizedType_TypeParameter* mutable_type_parameter();
  void set_allocated_type_parameter(::io::substrait::ParameterizedType_TypeParameter* type_parameter);
  private:
  const ::io::substrait::ParameterizedType_TypeParameter& _internal_type_parameter() const;
  ::io::substrait::ParameterizedType_TypeParameter* _internal_mutable_type_parameter();
  public:
  void unsafe_arena_set_allocated_type_parameter(
      ::io::substrait::ParameterizedType_TypeParameter* type_parameter);
  ::io::substrait::ParameterizedType_TypeParameter* unsafe_arena_release_type_parameter();

  void clear_kind();
  KindCase kind_case() const;
  // @@protoc_insertion_point(class_scope:io.substrait.ParameterizedType)
 private:
  class _Internal;
  void set_has_bool_();
  void set_has_i8();
  void set_has_i16();
  void set_has_i32();
  void set_has_i64();
  void set_has_fp32();
  void set_has_fp64();
  void set_has_string();
  void set_has_binary();
  void set_has_timestamp();
  void set_has_date();
  void set_has_time();
  void set_has_interval_year();
  void set_has_interval_day();
  void set_has_timestamp_tz();
  void set_has_uuid();
  void set_has_fixed_char();
  void set_has_varchar();
  void set_has_fixed_binary();
  void set_has_decimal();
  void set_has_struct_();
  void set_has_list();
  void set_has_map();
  void set_has_user_defined();
  void set_has_type_parameter();

  inline bool has_kind() const;
  inline void clear_has_kind();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union KindUnion {
    constexpr KindUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::io::substrait::Type_Boolean* bool__;
    ::io::substrait::Type_I8* i8_;
    ::io::substrait::Type_I16* i16_;
    ::io::substrait::Type_I32* i32_;
    ::io::substrait::Type_I64* i64_;
    ::io::substrait::Type_FP32* fp32_;
    ::io::substrait::Type_FP64* fp64_;
    ::io::substrait::Type_String* string_;
    ::io::substrait::Type_Binary* binary_;
    ::io::substrait::Type_Timestamp* timestamp_;
    ::io::substrait::Type_Date* date_;
    ::io::substrait::Type_Time* time_;
    ::io::substrait::Type_IntervalYear* interval_year_;
    ::io::substrait::Type_IntervalDay* interval_day_;
    ::io::substrait::Type_TimestampTZ* timestamp_tz_;
    ::io::substrait::Type_UUID* uuid_;
    ::io::substrait::ParameterizedType_ParameterizedFixedChar* fixed_char_;
    ::io::substrait::ParameterizedType_ParameterizedVarChar* varchar_;
    ::io::substrait::ParameterizedType_ParameterizedFixedBinary* fixed_binary_;
    ::io::substrait::ParameterizedType_ParameterizedDecimal* decimal_;
    ::io::substrait::ParameterizedType_ParameterizedStruct* struct__;
    ::io::substrait::ParameterizedType_ParameterizedList* list_;
    ::io::substrait::ParameterizedType_ParameterizedMap* map_;
    ::io::substrait::Extensions_TypeId* user_defined_;
    ::io::substrait::ParameterizedType_TypeParameter* type_parameter_;
  } kind_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_parameterized_5ftypes_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ParameterizedType_TypeParameter

// string name = 1;
inline void ParameterizedType_TypeParameter::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& ParameterizedType_TypeParameter::name() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.TypeParameter.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
PROTOBUF_ALWAYS_INLINE
inline void ParameterizedType_TypeParameter::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArena());
  // @@protoc_insertion_point(field_set:io.substrait.ParameterizedType.TypeParameter.name)
}
inline std::string* ParameterizedType_TypeParameter::mutable_name() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.TypeParameter.name)
  return _internal_mutable_name();
}
inline const std::string& ParameterizedType_TypeParameter::_internal_name() const {
  return name_.Get();
}
inline void ParameterizedType_TypeParameter::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline std::string* ParameterizedType_TypeParameter::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ParameterizedType_TypeParameter::release_name() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.TypeParameter.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ParameterizedType_TypeParameter::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.TypeParameter.name)
}

// repeated .io.substrait.ParameterizedType bounds = 2;
inline int ParameterizedType_TypeParameter::_internal_bounds_size() const {
  return bounds_.size();
}
inline int ParameterizedType_TypeParameter::bounds_size() const {
  return _internal_bounds_size();
}
inline void ParameterizedType_TypeParameter::clear_bounds() {
  bounds_.Clear();
}
inline ::io::substrait::ParameterizedType* ParameterizedType_TypeParameter::mutable_bounds(int index) {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.TypeParameter.bounds)
  return bounds_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::io::substrait::ParameterizedType >*
ParameterizedType_TypeParameter::mutable_bounds() {
  // @@protoc_insertion_point(field_mutable_list:io.substrait.ParameterizedType.TypeParameter.bounds)
  return &bounds_;
}
inline const ::io::substrait::ParameterizedType& ParameterizedType_TypeParameter::_internal_bounds(int index) const {
  return bounds_.Get(index);
}
inline const ::io::substrait::ParameterizedType& ParameterizedType_TypeParameter::bounds(int index) const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.TypeParameter.bounds)
  return _internal_bounds(index);
}
inline ::io::substrait::ParameterizedType* ParameterizedType_TypeParameter::_internal_add_bounds() {
  return bounds_.Add();
}
inline ::io::substrait::ParameterizedType* ParameterizedType_TypeParameter::add_bounds() {
  // @@protoc_insertion_point(field_add:io.substrait.ParameterizedType.TypeParameter.bounds)
  return _internal_add_bounds();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::io::substrait::ParameterizedType >&
ParameterizedType_TypeParameter::bounds() const {
  // @@protoc_insertion_point(field_list:io.substrait.ParameterizedType.TypeParameter.bounds)
  return bounds_;
}

// -------------------------------------------------------------------

// ParameterizedType_IntegerParameter

// string name = 1;
inline void ParameterizedType_IntegerParameter::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& ParameterizedType_IntegerParameter::name() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.IntegerParameter.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
PROTOBUF_ALWAYS_INLINE
inline void ParameterizedType_IntegerParameter::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArena());
  // @@protoc_insertion_point(field_set:io.substrait.ParameterizedType.IntegerParameter.name)
}
inline std::string* ParameterizedType_IntegerParameter::mutable_name() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.IntegerParameter.name)
  return _internal_mutable_name();
}
inline const std::string& ParameterizedType_IntegerParameter::_internal_name() const {
  return name_.Get();
}
inline void ParameterizedType_IntegerParameter::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline std::string* ParameterizedType_IntegerParameter::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ParameterizedType_IntegerParameter::release_name() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.IntegerParameter.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ParameterizedType_IntegerParameter::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.IntegerParameter.name)
}

// .io.substrait.ParameterizedType.NullableInteger range_start_inclusive = 2;
inline bool ParameterizedType_IntegerParameter::_internal_has_range_start_inclusive() const {
  return this != internal_default_instance() && range_start_inclusive_ != nullptr;
}
inline bool ParameterizedType_IntegerParameter::has_range_start_inclusive() const {
  return _internal_has_range_start_inclusive();
}
inline void ParameterizedType_IntegerParameter::clear_range_start_inclusive() {
  if (GetArena() == nullptr && range_start_inclusive_ != nullptr) {
    delete range_start_inclusive_;
  }
  range_start_inclusive_ = nullptr;
}
inline const ::io::substrait::ParameterizedType_NullableInteger& ParameterizedType_IntegerParameter::_internal_range_start_inclusive() const {
  const ::io::substrait::ParameterizedType_NullableInteger* p = range_start_inclusive_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::ParameterizedType_NullableInteger&>(
      ::io::substrait::_ParameterizedType_NullableInteger_default_instance_);
}
inline const ::io::substrait::ParameterizedType_NullableInteger& ParameterizedType_IntegerParameter::range_start_inclusive() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.IntegerParameter.range_start_inclusive)
  return _internal_range_start_inclusive();
}
inline void ParameterizedType_IntegerParameter::unsafe_arena_set_allocated_range_start_inclusive(
    ::io::substrait::ParameterizedType_NullableInteger* range_start_inclusive) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(range_start_inclusive_);
  }
  range_start_inclusive_ = range_start_inclusive;
  if (range_start_inclusive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.IntegerParameter.range_start_inclusive)
}
inline ::io::substrait::ParameterizedType_NullableInteger* ParameterizedType_IntegerParameter::release_range_start_inclusive() {
  
  ::io::substrait::ParameterizedType_NullableInteger* temp = range_start_inclusive_;
  range_start_inclusive_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::ParameterizedType_NullableInteger* ParameterizedType_IntegerParameter::unsafe_arena_release_range_start_inclusive() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.IntegerParameter.range_start_inclusive)
  
  ::io::substrait::ParameterizedType_NullableInteger* temp = range_start_inclusive_;
  range_start_inclusive_ = nullptr;
  return temp;
}
inline ::io::substrait::ParameterizedType_NullableInteger* ParameterizedType_IntegerParameter::_internal_mutable_range_start_inclusive() {
  
  if (range_start_inclusive_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::ParameterizedType_NullableInteger>(GetArena());
    range_start_inclusive_ = p;
  }
  return range_start_inclusive_;
}
inline ::io::substrait::ParameterizedType_NullableInteger* ParameterizedType_IntegerParameter::mutable_range_start_inclusive() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.IntegerParameter.range_start_inclusive)
  return _internal_mutable_range_start_inclusive();
}
inline void ParameterizedType_IntegerParameter::set_allocated_range_start_inclusive(::io::substrait::ParameterizedType_NullableInteger* range_start_inclusive) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete range_start_inclusive_;
  }
  if (range_start_inclusive) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(range_start_inclusive);
    if (message_arena != submessage_arena) {
      range_start_inclusive = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, range_start_inclusive, submessage_arena);
    }
    
  } else {
    
  }
  range_start_inclusive_ = range_start_inclusive;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.IntegerParameter.range_start_inclusive)
}

// .io.substrait.ParameterizedType.NullableInteger range_end_exclusive = 3;
inline bool ParameterizedType_IntegerParameter::_internal_has_range_end_exclusive() const {
  return this != internal_default_instance() && range_end_exclusive_ != nullptr;
}
inline bool ParameterizedType_IntegerParameter::has_range_end_exclusive() const {
  return _internal_has_range_end_exclusive();
}
inline void ParameterizedType_IntegerParameter::clear_range_end_exclusive() {
  if (GetArena() == nullptr && range_end_exclusive_ != nullptr) {
    delete range_end_exclusive_;
  }
  range_end_exclusive_ = nullptr;
}
inline const ::io::substrait::ParameterizedType_NullableInteger& ParameterizedType_IntegerParameter::_internal_range_end_exclusive() const {
  const ::io::substrait::ParameterizedType_NullableInteger* p = range_end_exclusive_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::ParameterizedType_NullableInteger&>(
      ::io::substrait::_ParameterizedType_NullableInteger_default_instance_);
}
inline const ::io::substrait::ParameterizedType_NullableInteger& ParameterizedType_IntegerParameter::range_end_exclusive() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.IntegerParameter.range_end_exclusive)
  return _internal_range_end_exclusive();
}
inline void ParameterizedType_IntegerParameter::unsafe_arena_set_allocated_range_end_exclusive(
    ::io::substrait::ParameterizedType_NullableInteger* range_end_exclusive) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(range_end_exclusive_);
  }
  range_end_exclusive_ = range_end_exclusive;
  if (range_end_exclusive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.IntegerParameter.range_end_exclusive)
}
inline ::io::substrait::ParameterizedType_NullableInteger* ParameterizedType_IntegerParameter::release_range_end_exclusive() {
  
  ::io::substrait::ParameterizedType_NullableInteger* temp = range_end_exclusive_;
  range_end_exclusive_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::ParameterizedType_NullableInteger* ParameterizedType_IntegerParameter::unsafe_arena_release_range_end_exclusive() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.IntegerParameter.range_end_exclusive)
  
  ::io::substrait::ParameterizedType_NullableInteger* temp = range_end_exclusive_;
  range_end_exclusive_ = nullptr;
  return temp;
}
inline ::io::substrait::ParameterizedType_NullableInteger* ParameterizedType_IntegerParameter::_internal_mutable_range_end_exclusive() {
  
  if (range_end_exclusive_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::ParameterizedType_NullableInteger>(GetArena());
    range_end_exclusive_ = p;
  }
  return range_end_exclusive_;
}
inline ::io::substrait::ParameterizedType_NullableInteger* ParameterizedType_IntegerParameter::mutable_range_end_exclusive() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.IntegerParameter.range_end_exclusive)
  return _internal_mutable_range_end_exclusive();
}
inline void ParameterizedType_IntegerParameter::set_allocated_range_end_exclusive(::io::substrait::ParameterizedType_NullableInteger* range_end_exclusive) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete range_end_exclusive_;
  }
  if (range_end_exclusive) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(range_end_exclusive);
    if (message_arena != submessage_arena) {
      range_end_exclusive = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, range_end_exclusive, submessage_arena);
    }
    
  } else {
    
  }
  range_end_exclusive_ = range_end_exclusive;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.IntegerParameter.range_end_exclusive)
}

// -------------------------------------------------------------------

// ParameterizedType_NullableInteger

// int64 value = 1;
inline void ParameterizedType_NullableInteger::clear_value() {
  value_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ParameterizedType_NullableInteger::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ParameterizedType_NullableInteger::value() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.NullableInteger.value)
  return _internal_value();
}
inline void ParameterizedType_NullableInteger::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  value_ = value;
}
inline void ParameterizedType_NullableInteger::set_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:io.substrait.ParameterizedType.NullableInteger.value)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedFixedChar

// .io.substrait.ParameterizedType.IntegerOption length = 1;
inline bool ParameterizedType_ParameterizedFixedChar::_internal_has_length() const {
  return this != internal_default_instance() && length_ != nullptr;
}
inline bool ParameterizedType_ParameterizedFixedChar::has_length() const {
  return _internal_has_length();
}
inline void ParameterizedType_ParameterizedFixedChar::clear_length() {
  if (GetArena() == nullptr && length_ != nullptr) {
    delete length_;
  }
  length_ = nullptr;
}
inline const ::io::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedFixedChar::_internal_length() const {
  const ::io::substrait::ParameterizedType_IntegerOption* p = length_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::ParameterizedType_IntegerOption&>(
      ::io::substrait::_ParameterizedType_IntegerOption_default_instance_);
}
inline const ::io::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedFixedChar::length() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedFixedChar.length)
  return _internal_length();
}
inline void ParameterizedType_ParameterizedFixedChar::unsafe_arena_set_allocated_length(
    ::io::substrait::ParameterizedType_IntegerOption* length) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(length_);
  }
  length_ = length;
  if (length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedFixedChar.length)
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedFixedChar::release_length() {
  
  ::io::substrait::ParameterizedType_IntegerOption* temp = length_;
  length_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedFixedChar::unsafe_arena_release_length() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedFixedChar.length)
  
  ::io::substrait::ParameterizedType_IntegerOption* temp = length_;
  length_ = nullptr;
  return temp;
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedFixedChar::_internal_mutable_length() {
  
  if (length_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::ParameterizedType_IntegerOption>(GetArena());
    length_ = p;
  }
  return length_;
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedFixedChar::mutable_length() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedFixedChar.length)
  return _internal_mutable_length();
}
inline void ParameterizedType_ParameterizedFixedChar::set_allocated_length(::io::substrait::ParameterizedType_IntegerOption* length) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete length_;
  }
  if (length) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(length);
    if (message_arena != submessage_arena) {
      length = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, length, submessage_arena);
    }
    
  } else {
    
  }
  length_ = length;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedFixedChar.length)
}

// .io.substrait.Type.Variation variation = 2;
inline bool ParameterizedType_ParameterizedFixedChar::_internal_has_variation() const {
  return this != internal_default_instance() && variation_ != nullptr;
}
inline bool ParameterizedType_ParameterizedFixedChar::has_variation() const {
  return _internal_has_variation();
}
inline const ::io::substrait::Type_Variation& ParameterizedType_ParameterizedFixedChar::_internal_variation() const {
  const ::io::substrait::Type_Variation* p = variation_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::Type_Variation&>(
      ::io::substrait::_Type_Variation_default_instance_);
}
inline const ::io::substrait::Type_Variation& ParameterizedType_ParameterizedFixedChar::variation() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedFixedChar.variation)
  return _internal_variation();
}
inline void ParameterizedType_ParameterizedFixedChar::unsafe_arena_set_allocated_variation(
    ::io::substrait::Type_Variation* variation) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation_);
  }
  variation_ = variation;
  if (variation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedFixedChar.variation)
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedFixedChar::release_variation() {
  
  ::io::substrait::Type_Variation* temp = variation_;
  variation_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedFixedChar::unsafe_arena_release_variation() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedFixedChar.variation)
  
  ::io::substrait::Type_Variation* temp = variation_;
  variation_ = nullptr;
  return temp;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedFixedChar::_internal_mutable_variation() {
  
  if (variation_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::Type_Variation>(GetArena());
    variation_ = p;
  }
  return variation_;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedFixedChar::mutable_variation() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedFixedChar.variation)
  return _internal_mutable_variation();
}
inline void ParameterizedType_ParameterizedFixedChar::set_allocated_variation(::io::substrait::Type_Variation* variation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation_);
  }
  if (variation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation)->GetArena();
    if (message_arena != submessage_arena) {
      variation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, variation, submessage_arena);
    }
    
  } else {
    
  }
  variation_ = variation;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedFixedChar.variation)
}

// .io.substrait.Type.Nullability nullability = 3;
inline void ParameterizedType_ParameterizedFixedChar::clear_nullability() {
  nullability_ = 0;
}
inline ::io::substrait::Type_Nullability ParameterizedType_ParameterizedFixedChar::_internal_nullability() const {
  return static_cast< ::io::substrait::Type_Nullability >(nullability_);
}
inline ::io::substrait::Type_Nullability ParameterizedType_ParameterizedFixedChar::nullability() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedFixedChar.nullability)
  return _internal_nullability();
}
inline void ParameterizedType_ParameterizedFixedChar::_internal_set_nullability(::io::substrait::Type_Nullability value) {
  
  nullability_ = value;
}
inline void ParameterizedType_ParameterizedFixedChar::set_nullability(::io::substrait::Type_Nullability value) {
  _internal_set_nullability(value);
  // @@protoc_insertion_point(field_set:io.substrait.ParameterizedType.ParameterizedFixedChar.nullability)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedVarChar

// .io.substrait.ParameterizedType.IntegerOption length = 1;
inline bool ParameterizedType_ParameterizedVarChar::_internal_has_length() const {
  return this != internal_default_instance() && length_ != nullptr;
}
inline bool ParameterizedType_ParameterizedVarChar::has_length() const {
  return _internal_has_length();
}
inline void ParameterizedType_ParameterizedVarChar::clear_length() {
  if (GetArena() == nullptr && length_ != nullptr) {
    delete length_;
  }
  length_ = nullptr;
}
inline const ::io::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedVarChar::_internal_length() const {
  const ::io::substrait::ParameterizedType_IntegerOption* p = length_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::ParameterizedType_IntegerOption&>(
      ::io::substrait::_ParameterizedType_IntegerOption_default_instance_);
}
inline const ::io::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedVarChar::length() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedVarChar.length)
  return _internal_length();
}
inline void ParameterizedType_ParameterizedVarChar::unsafe_arena_set_allocated_length(
    ::io::substrait::ParameterizedType_IntegerOption* length) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(length_);
  }
  length_ = length;
  if (length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedVarChar.length)
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedVarChar::release_length() {
  
  ::io::substrait::ParameterizedType_IntegerOption* temp = length_;
  length_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedVarChar::unsafe_arena_release_length() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedVarChar.length)
  
  ::io::substrait::ParameterizedType_IntegerOption* temp = length_;
  length_ = nullptr;
  return temp;
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedVarChar::_internal_mutable_length() {
  
  if (length_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::ParameterizedType_IntegerOption>(GetArena());
    length_ = p;
  }
  return length_;
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedVarChar::mutable_length() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedVarChar.length)
  return _internal_mutable_length();
}
inline void ParameterizedType_ParameterizedVarChar::set_allocated_length(::io::substrait::ParameterizedType_IntegerOption* length) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete length_;
  }
  if (length) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(length);
    if (message_arena != submessage_arena) {
      length = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, length, submessage_arena);
    }
    
  } else {
    
  }
  length_ = length;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedVarChar.length)
}

// .io.substrait.Type.Variation variation = 2;
inline bool ParameterizedType_ParameterizedVarChar::_internal_has_variation() const {
  return this != internal_default_instance() && variation_ != nullptr;
}
inline bool ParameterizedType_ParameterizedVarChar::has_variation() const {
  return _internal_has_variation();
}
inline const ::io::substrait::Type_Variation& ParameterizedType_ParameterizedVarChar::_internal_variation() const {
  const ::io::substrait::Type_Variation* p = variation_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::Type_Variation&>(
      ::io::substrait::_Type_Variation_default_instance_);
}
inline const ::io::substrait::Type_Variation& ParameterizedType_ParameterizedVarChar::variation() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedVarChar.variation)
  return _internal_variation();
}
inline void ParameterizedType_ParameterizedVarChar::unsafe_arena_set_allocated_variation(
    ::io::substrait::Type_Variation* variation) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation_);
  }
  variation_ = variation;
  if (variation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedVarChar.variation)
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedVarChar::release_variation() {
  
  ::io::substrait::Type_Variation* temp = variation_;
  variation_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedVarChar::unsafe_arena_release_variation() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedVarChar.variation)
  
  ::io::substrait::Type_Variation* temp = variation_;
  variation_ = nullptr;
  return temp;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedVarChar::_internal_mutable_variation() {
  
  if (variation_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::Type_Variation>(GetArena());
    variation_ = p;
  }
  return variation_;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedVarChar::mutable_variation() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedVarChar.variation)
  return _internal_mutable_variation();
}
inline void ParameterizedType_ParameterizedVarChar::set_allocated_variation(::io::substrait::Type_Variation* variation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation_);
  }
  if (variation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation)->GetArena();
    if (message_arena != submessage_arena) {
      variation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, variation, submessage_arena);
    }
    
  } else {
    
  }
  variation_ = variation;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedVarChar.variation)
}

// .io.substrait.Type.Nullability nullability = 3;
inline void ParameterizedType_ParameterizedVarChar::clear_nullability() {
  nullability_ = 0;
}
inline ::io::substrait::Type_Nullability ParameterizedType_ParameterizedVarChar::_internal_nullability() const {
  return static_cast< ::io::substrait::Type_Nullability >(nullability_);
}
inline ::io::substrait::Type_Nullability ParameterizedType_ParameterizedVarChar::nullability() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedVarChar.nullability)
  return _internal_nullability();
}
inline void ParameterizedType_ParameterizedVarChar::_internal_set_nullability(::io::substrait::Type_Nullability value) {
  
  nullability_ = value;
}
inline void ParameterizedType_ParameterizedVarChar::set_nullability(::io::substrait::Type_Nullability value) {
  _internal_set_nullability(value);
  // @@protoc_insertion_point(field_set:io.substrait.ParameterizedType.ParameterizedVarChar.nullability)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedFixedBinary

// .io.substrait.ParameterizedType.IntegerOption length = 1;
inline bool ParameterizedType_ParameterizedFixedBinary::_internal_has_length() const {
  return this != internal_default_instance() && length_ != nullptr;
}
inline bool ParameterizedType_ParameterizedFixedBinary::has_length() const {
  return _internal_has_length();
}
inline void ParameterizedType_ParameterizedFixedBinary::clear_length() {
  if (GetArena() == nullptr && length_ != nullptr) {
    delete length_;
  }
  length_ = nullptr;
}
inline const ::io::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedFixedBinary::_internal_length() const {
  const ::io::substrait::ParameterizedType_IntegerOption* p = length_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::ParameterizedType_IntegerOption&>(
      ::io::substrait::_ParameterizedType_IntegerOption_default_instance_);
}
inline const ::io::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedFixedBinary::length() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedFixedBinary.length)
  return _internal_length();
}
inline void ParameterizedType_ParameterizedFixedBinary::unsafe_arena_set_allocated_length(
    ::io::substrait::ParameterizedType_IntegerOption* length) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(length_);
  }
  length_ = length;
  if (length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedFixedBinary.length)
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedFixedBinary::release_length() {
  
  ::io::substrait::ParameterizedType_IntegerOption* temp = length_;
  length_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedFixedBinary::unsafe_arena_release_length() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedFixedBinary.length)
  
  ::io::substrait::ParameterizedType_IntegerOption* temp = length_;
  length_ = nullptr;
  return temp;
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedFixedBinary::_internal_mutable_length() {
  
  if (length_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::ParameterizedType_IntegerOption>(GetArena());
    length_ = p;
  }
  return length_;
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedFixedBinary::mutable_length() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedFixedBinary.length)
  return _internal_mutable_length();
}
inline void ParameterizedType_ParameterizedFixedBinary::set_allocated_length(::io::substrait::ParameterizedType_IntegerOption* length) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete length_;
  }
  if (length) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(length);
    if (message_arena != submessage_arena) {
      length = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, length, submessage_arena);
    }
    
  } else {
    
  }
  length_ = length;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedFixedBinary.length)
}

// .io.substrait.Type.Variation variation = 2;
inline bool ParameterizedType_ParameterizedFixedBinary::_internal_has_variation() const {
  return this != internal_default_instance() && variation_ != nullptr;
}
inline bool ParameterizedType_ParameterizedFixedBinary::has_variation() const {
  return _internal_has_variation();
}
inline const ::io::substrait::Type_Variation& ParameterizedType_ParameterizedFixedBinary::_internal_variation() const {
  const ::io::substrait::Type_Variation* p = variation_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::Type_Variation&>(
      ::io::substrait::_Type_Variation_default_instance_);
}
inline const ::io::substrait::Type_Variation& ParameterizedType_ParameterizedFixedBinary::variation() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedFixedBinary.variation)
  return _internal_variation();
}
inline void ParameterizedType_ParameterizedFixedBinary::unsafe_arena_set_allocated_variation(
    ::io::substrait::Type_Variation* variation) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation_);
  }
  variation_ = variation;
  if (variation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedFixedBinary.variation)
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedFixedBinary::release_variation() {
  
  ::io::substrait::Type_Variation* temp = variation_;
  variation_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedFixedBinary::unsafe_arena_release_variation() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedFixedBinary.variation)
  
  ::io::substrait::Type_Variation* temp = variation_;
  variation_ = nullptr;
  return temp;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedFixedBinary::_internal_mutable_variation() {
  
  if (variation_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::Type_Variation>(GetArena());
    variation_ = p;
  }
  return variation_;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedFixedBinary::mutable_variation() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedFixedBinary.variation)
  return _internal_mutable_variation();
}
inline void ParameterizedType_ParameterizedFixedBinary::set_allocated_variation(::io::substrait::Type_Variation* variation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation_);
  }
  if (variation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation)->GetArena();
    if (message_arena != submessage_arena) {
      variation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, variation, submessage_arena);
    }
    
  } else {
    
  }
  variation_ = variation;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedFixedBinary.variation)
}

// .io.substrait.Type.Nullability nullability = 3;
inline void ParameterizedType_ParameterizedFixedBinary::clear_nullability() {
  nullability_ = 0;
}
inline ::io::substrait::Type_Nullability ParameterizedType_ParameterizedFixedBinary::_internal_nullability() const {
  return static_cast< ::io::substrait::Type_Nullability >(nullability_);
}
inline ::io::substrait::Type_Nullability ParameterizedType_ParameterizedFixedBinary::nullability() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedFixedBinary.nullability)
  return _internal_nullability();
}
inline void ParameterizedType_ParameterizedFixedBinary::_internal_set_nullability(::io::substrait::Type_Nullability value) {
  
  nullability_ = value;
}
inline void ParameterizedType_ParameterizedFixedBinary::set_nullability(::io::substrait::Type_Nullability value) {
  _internal_set_nullability(value);
  // @@protoc_insertion_point(field_set:io.substrait.ParameterizedType.ParameterizedFixedBinary.nullability)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedDecimal

// .io.substrait.ParameterizedType.IntegerOption scale = 1;
inline bool ParameterizedType_ParameterizedDecimal::_internal_has_scale() const {
  return this != internal_default_instance() && scale_ != nullptr;
}
inline bool ParameterizedType_ParameterizedDecimal::has_scale() const {
  return _internal_has_scale();
}
inline void ParameterizedType_ParameterizedDecimal::clear_scale() {
  if (GetArena() == nullptr && scale_ != nullptr) {
    delete scale_;
  }
  scale_ = nullptr;
}
inline const ::io::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedDecimal::_internal_scale() const {
  const ::io::substrait::ParameterizedType_IntegerOption* p = scale_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::ParameterizedType_IntegerOption&>(
      ::io::substrait::_ParameterizedType_IntegerOption_default_instance_);
}
inline const ::io::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedDecimal::scale() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedDecimal.scale)
  return _internal_scale();
}
inline void ParameterizedType_ParameterizedDecimal::unsafe_arena_set_allocated_scale(
    ::io::substrait::ParameterizedType_IntegerOption* scale) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(scale_);
  }
  scale_ = scale;
  if (scale) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedDecimal.scale)
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedDecimal::release_scale() {
  
  ::io::substrait::ParameterizedType_IntegerOption* temp = scale_;
  scale_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedDecimal::unsafe_arena_release_scale() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedDecimal.scale)
  
  ::io::substrait::ParameterizedType_IntegerOption* temp = scale_;
  scale_ = nullptr;
  return temp;
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedDecimal::_internal_mutable_scale() {
  
  if (scale_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::ParameterizedType_IntegerOption>(GetArena());
    scale_ = p;
  }
  return scale_;
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedDecimal::mutable_scale() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedDecimal.scale)
  return _internal_mutable_scale();
}
inline void ParameterizedType_ParameterizedDecimal::set_allocated_scale(::io::substrait::ParameterizedType_IntegerOption* scale) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete scale_;
  }
  if (scale) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(scale);
    if (message_arena != submessage_arena) {
      scale = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scale, submessage_arena);
    }
    
  } else {
    
  }
  scale_ = scale;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedDecimal.scale)
}

// .io.substrait.ParameterizedType.IntegerOption precision = 2;
inline bool ParameterizedType_ParameterizedDecimal::_internal_has_precision() const {
  return this != internal_default_instance() && precision_ != nullptr;
}
inline bool ParameterizedType_ParameterizedDecimal::has_precision() const {
  return _internal_has_precision();
}
inline void ParameterizedType_ParameterizedDecimal::clear_precision() {
  if (GetArena() == nullptr && precision_ != nullptr) {
    delete precision_;
  }
  precision_ = nullptr;
}
inline const ::io::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedDecimal::_internal_precision() const {
  const ::io::substrait::ParameterizedType_IntegerOption* p = precision_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::ParameterizedType_IntegerOption&>(
      ::io::substrait::_ParameterizedType_IntegerOption_default_instance_);
}
inline const ::io::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedDecimal::precision() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedDecimal.precision)
  return _internal_precision();
}
inline void ParameterizedType_ParameterizedDecimal::unsafe_arena_set_allocated_precision(
    ::io::substrait::ParameterizedType_IntegerOption* precision) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(precision_);
  }
  precision_ = precision;
  if (precision) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedDecimal.precision)
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedDecimal::release_precision() {
  
  ::io::substrait::ParameterizedType_IntegerOption* temp = precision_;
  precision_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedDecimal::unsafe_arena_release_precision() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedDecimal.precision)
  
  ::io::substrait::ParameterizedType_IntegerOption* temp = precision_;
  precision_ = nullptr;
  return temp;
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedDecimal::_internal_mutable_precision() {
  
  if (precision_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::ParameterizedType_IntegerOption>(GetArena());
    precision_ = p;
  }
  return precision_;
}
inline ::io::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedDecimal::mutable_precision() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedDecimal.precision)
  return _internal_mutable_precision();
}
inline void ParameterizedType_ParameterizedDecimal::set_allocated_precision(::io::substrait::ParameterizedType_IntegerOption* precision) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete precision_;
  }
  if (precision) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(precision);
    if (message_arena != submessage_arena) {
      precision = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, precision, submessage_arena);
    }
    
  } else {
    
  }
  precision_ = precision;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedDecimal.precision)
}

// .io.substrait.Type.Variation variation = 3;
inline bool ParameterizedType_ParameterizedDecimal::_internal_has_variation() const {
  return this != internal_default_instance() && variation_ != nullptr;
}
inline bool ParameterizedType_ParameterizedDecimal::has_variation() const {
  return _internal_has_variation();
}
inline const ::io::substrait::Type_Variation& ParameterizedType_ParameterizedDecimal::_internal_variation() const {
  const ::io::substrait::Type_Variation* p = variation_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::Type_Variation&>(
      ::io::substrait::_Type_Variation_default_instance_);
}
inline const ::io::substrait::Type_Variation& ParameterizedType_ParameterizedDecimal::variation() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedDecimal.variation)
  return _internal_variation();
}
inline void ParameterizedType_ParameterizedDecimal::unsafe_arena_set_allocated_variation(
    ::io::substrait::Type_Variation* variation) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation_);
  }
  variation_ = variation;
  if (variation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedDecimal.variation)
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedDecimal::release_variation() {
  
  ::io::substrait::Type_Variation* temp = variation_;
  variation_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedDecimal::unsafe_arena_release_variation() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedDecimal.variation)
  
  ::io::substrait::Type_Variation* temp = variation_;
  variation_ = nullptr;
  return temp;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedDecimal::_internal_mutable_variation() {
  
  if (variation_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::Type_Variation>(GetArena());
    variation_ = p;
  }
  return variation_;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedDecimal::mutable_variation() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedDecimal.variation)
  return _internal_mutable_variation();
}
inline void ParameterizedType_ParameterizedDecimal::set_allocated_variation(::io::substrait::Type_Variation* variation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation_);
  }
  if (variation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation)->GetArena();
    if (message_arena != submessage_arena) {
      variation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, variation, submessage_arena);
    }
    
  } else {
    
  }
  variation_ = variation;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedDecimal.variation)
}

// .io.substrait.Type.Nullability nullability = 4;
inline void ParameterizedType_ParameterizedDecimal::clear_nullability() {
  nullability_ = 0;
}
inline ::io::substrait::Type_Nullability ParameterizedType_ParameterizedDecimal::_internal_nullability() const {
  return static_cast< ::io::substrait::Type_Nullability >(nullability_);
}
inline ::io::substrait::Type_Nullability ParameterizedType_ParameterizedDecimal::nullability() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedDecimal.nullability)
  return _internal_nullability();
}
inline void ParameterizedType_ParameterizedDecimal::_internal_set_nullability(::io::substrait::Type_Nullability value) {
  
  nullability_ = value;
}
inline void ParameterizedType_ParameterizedDecimal::set_nullability(::io::substrait::Type_Nullability value) {
  _internal_set_nullability(value);
  // @@protoc_insertion_point(field_set:io.substrait.ParameterizedType.ParameterizedDecimal.nullability)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedStruct

// repeated .io.substrait.ParameterizedType types = 1;
inline int ParameterizedType_ParameterizedStruct::_internal_types_size() const {
  return types_.size();
}
inline int ParameterizedType_ParameterizedStruct::types_size() const {
  return _internal_types_size();
}
inline void ParameterizedType_ParameterizedStruct::clear_types() {
  types_.Clear();
}
inline ::io::substrait::ParameterizedType* ParameterizedType_ParameterizedStruct::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedStruct.types)
  return types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::io::substrait::ParameterizedType >*
ParameterizedType_ParameterizedStruct::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:io.substrait.ParameterizedType.ParameterizedStruct.types)
  return &types_;
}
inline const ::io::substrait::ParameterizedType& ParameterizedType_ParameterizedStruct::_internal_types(int index) const {
  return types_.Get(index);
}
inline const ::io::substrait::ParameterizedType& ParameterizedType_ParameterizedStruct::types(int index) const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedStruct.types)
  return _internal_types(index);
}
inline ::io::substrait::ParameterizedType* ParameterizedType_ParameterizedStruct::_internal_add_types() {
  return types_.Add();
}
inline ::io::substrait::ParameterizedType* ParameterizedType_ParameterizedStruct::add_types() {
  // @@protoc_insertion_point(field_add:io.substrait.ParameterizedType.ParameterizedStruct.types)
  return _internal_add_types();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::io::substrait::ParameterizedType >&
ParameterizedType_ParameterizedStruct::types() const {
  // @@protoc_insertion_point(field_list:io.substrait.ParameterizedType.ParameterizedStruct.types)
  return types_;
}

// .io.substrait.Type.Variation variation = 2;
inline bool ParameterizedType_ParameterizedStruct::_internal_has_variation() const {
  return this != internal_default_instance() && variation_ != nullptr;
}
inline bool ParameterizedType_ParameterizedStruct::has_variation() const {
  return _internal_has_variation();
}
inline const ::io::substrait::Type_Variation& ParameterizedType_ParameterizedStruct::_internal_variation() const {
  const ::io::substrait::Type_Variation* p = variation_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::Type_Variation&>(
      ::io::substrait::_Type_Variation_default_instance_);
}
inline const ::io::substrait::Type_Variation& ParameterizedType_ParameterizedStruct::variation() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedStruct.variation)
  return _internal_variation();
}
inline void ParameterizedType_ParameterizedStruct::unsafe_arena_set_allocated_variation(
    ::io::substrait::Type_Variation* variation) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation_);
  }
  variation_ = variation;
  if (variation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedStruct.variation)
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedStruct::release_variation() {
  
  ::io::substrait::Type_Variation* temp = variation_;
  variation_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedStruct::unsafe_arena_release_variation() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedStruct.variation)
  
  ::io::substrait::Type_Variation* temp = variation_;
  variation_ = nullptr;
  return temp;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedStruct::_internal_mutable_variation() {
  
  if (variation_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::Type_Variation>(GetArena());
    variation_ = p;
  }
  return variation_;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedStruct::mutable_variation() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedStruct.variation)
  return _internal_mutable_variation();
}
inline void ParameterizedType_ParameterizedStruct::set_allocated_variation(::io::substrait::Type_Variation* variation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation_);
  }
  if (variation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation)->GetArena();
    if (message_arena != submessage_arena) {
      variation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, variation, submessage_arena);
    }
    
  } else {
    
  }
  variation_ = variation;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedStruct.variation)
}

// .io.substrait.Type.Nullability nullability = 3;
inline void ParameterizedType_ParameterizedStruct::clear_nullability() {
  nullability_ = 0;
}
inline ::io::substrait::Type_Nullability ParameterizedType_ParameterizedStruct::_internal_nullability() const {
  return static_cast< ::io::substrait::Type_Nullability >(nullability_);
}
inline ::io::substrait::Type_Nullability ParameterizedType_ParameterizedStruct::nullability() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedStruct.nullability)
  return _internal_nullability();
}
inline void ParameterizedType_ParameterizedStruct::_internal_set_nullability(::io::substrait::Type_Nullability value) {
  
  nullability_ = value;
}
inline void ParameterizedType_ParameterizedStruct::set_nullability(::io::substrait::Type_Nullability value) {
  _internal_set_nullability(value);
  // @@protoc_insertion_point(field_set:io.substrait.ParameterizedType.ParameterizedStruct.nullability)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedNamedStruct

// repeated string names = 1;
inline int ParameterizedType_ParameterizedNamedStruct::_internal_names_size() const {
  return names_.size();
}
inline int ParameterizedType_ParameterizedNamedStruct::names_size() const {
  return _internal_names_size();
}
inline void ParameterizedType_ParameterizedNamedStruct::clear_names() {
  names_.Clear();
}
inline std::string* ParameterizedType_ParameterizedNamedStruct::add_names() {
  // @@protoc_insertion_point(field_add_mutable:io.substrait.ParameterizedType.ParameterizedNamedStruct.names)
  return _internal_add_names();
}
inline const std::string& ParameterizedType_ParameterizedNamedStruct::_internal_names(int index) const {
  return names_.Get(index);
}
inline const std::string& ParameterizedType_ParameterizedNamedStruct::names(int index) const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedNamedStruct.names)
  return _internal_names(index);
}
inline std::string* ParameterizedType_ParameterizedNamedStruct::mutable_names(int index) {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedNamedStruct.names)
  return names_.Mutable(index);
}
inline void ParameterizedType_ParameterizedNamedStruct::set_names(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:io.substrait.ParameterizedType.ParameterizedNamedStruct.names)
  names_.Mutable(index)->assign(value);
}
inline void ParameterizedType_ParameterizedNamedStruct::set_names(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:io.substrait.ParameterizedType.ParameterizedNamedStruct.names)
  names_.Mutable(index)->assign(std::move(value));
}
inline void ParameterizedType_ParameterizedNamedStruct::set_names(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:io.substrait.ParameterizedType.ParameterizedNamedStruct.names)
}
inline void ParameterizedType_ParameterizedNamedStruct::set_names(int index, const char* value, size_t size) {
  names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:io.substrait.ParameterizedType.ParameterizedNamedStruct.names)
}
inline std::string* ParameterizedType_ParameterizedNamedStruct::_internal_add_names() {
  return names_.Add();
}
inline void ParameterizedType_ParameterizedNamedStruct::add_names(const std::string& value) {
  names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:io.substrait.ParameterizedType.ParameterizedNamedStruct.names)
}
inline void ParameterizedType_ParameterizedNamedStruct::add_names(std::string&& value) {
  names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:io.substrait.ParameterizedType.ParameterizedNamedStruct.names)
}
inline void ParameterizedType_ParameterizedNamedStruct::add_names(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:io.substrait.ParameterizedType.ParameterizedNamedStruct.names)
}
inline void ParameterizedType_ParameterizedNamedStruct::add_names(const char* value, size_t size) {
  names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:io.substrait.ParameterizedType.ParameterizedNamedStruct.names)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ParameterizedType_ParameterizedNamedStruct::names() const {
  // @@protoc_insertion_point(field_list:io.substrait.ParameterizedType.ParameterizedNamedStruct.names)
  return names_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ParameterizedType_ParameterizedNamedStruct::mutable_names() {
  // @@protoc_insertion_point(field_mutable_list:io.substrait.ParameterizedType.ParameterizedNamedStruct.names)
  return &names_;
}

// .io.substrait.ParameterizedType.ParameterizedStruct struct = 2;
inline bool ParameterizedType_ParameterizedNamedStruct::_internal_has_struct_() const {
  return this != internal_default_instance() && struct__ != nullptr;
}
inline bool ParameterizedType_ParameterizedNamedStruct::has_struct_() const {
  return _internal_has_struct_();
}
inline void ParameterizedType_ParameterizedNamedStruct::clear_struct_() {
  if (GetArena() == nullptr && struct__ != nullptr) {
    delete struct__;
  }
  struct__ = nullptr;
}
inline const ::io::substrait::ParameterizedType_ParameterizedStruct& ParameterizedType_ParameterizedNamedStruct::_internal_struct_() const {
  const ::io::substrait::ParameterizedType_ParameterizedStruct* p = struct__;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::ParameterizedType_ParameterizedStruct&>(
      ::io::substrait::_ParameterizedType_ParameterizedStruct_default_instance_);
}
inline const ::io::substrait::ParameterizedType_ParameterizedStruct& ParameterizedType_ParameterizedNamedStruct::struct_() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedNamedStruct.struct)
  return _internal_struct_();
}
inline void ParameterizedType_ParameterizedNamedStruct::unsafe_arena_set_allocated_struct_(
    ::io::substrait::ParameterizedType_ParameterizedStruct* struct_) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(struct__);
  }
  struct__ = struct_;
  if (struct_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedNamedStruct.struct)
}
inline ::io::substrait::ParameterizedType_ParameterizedStruct* ParameterizedType_ParameterizedNamedStruct::release_struct_() {
  
  ::io::substrait::ParameterizedType_ParameterizedStruct* temp = struct__;
  struct__ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::ParameterizedType_ParameterizedStruct* ParameterizedType_ParameterizedNamedStruct::unsafe_arena_release_struct_() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedNamedStruct.struct)
  
  ::io::substrait::ParameterizedType_ParameterizedStruct* temp = struct__;
  struct__ = nullptr;
  return temp;
}
inline ::io::substrait::ParameterizedType_ParameterizedStruct* ParameterizedType_ParameterizedNamedStruct::_internal_mutable_struct_() {
  
  if (struct__ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::ParameterizedType_ParameterizedStruct>(GetArena());
    struct__ = p;
  }
  return struct__;
}
inline ::io::substrait::ParameterizedType_ParameterizedStruct* ParameterizedType_ParameterizedNamedStruct::mutable_struct_() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedNamedStruct.struct)
  return _internal_mutable_struct_();
}
inline void ParameterizedType_ParameterizedNamedStruct::set_allocated_struct_(::io::substrait::ParameterizedType_ParameterizedStruct* struct_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete struct__;
  }
  if (struct_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(struct_);
    if (message_arena != submessage_arena) {
      struct_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, struct_, submessage_arena);
    }
    
  } else {
    
  }
  struct__ = struct_;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedNamedStruct.struct)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedList

// .io.substrait.ParameterizedType type = 1;
inline bool ParameterizedType_ParameterizedList::_internal_has_type() const {
  return this != internal_default_instance() && type_ != nullptr;
}
inline bool ParameterizedType_ParameterizedList::has_type() const {
  return _internal_has_type();
}
inline void ParameterizedType_ParameterizedList::clear_type() {
  if (GetArena() == nullptr && type_ != nullptr) {
    delete type_;
  }
  type_ = nullptr;
}
inline const ::io::substrait::ParameterizedType& ParameterizedType_ParameterizedList::_internal_type() const {
  const ::io::substrait::ParameterizedType* p = type_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::ParameterizedType&>(
      ::io::substrait::_ParameterizedType_default_instance_);
}
inline const ::io::substrait::ParameterizedType& ParameterizedType_ParameterizedList::type() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedList.type)
  return _internal_type();
}
inline void ParameterizedType_ParameterizedList::unsafe_arena_set_allocated_type(
    ::io::substrait::ParameterizedType* type) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(type_);
  }
  type_ = type;
  if (type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedList.type)
}
inline ::io::substrait::ParameterizedType* ParameterizedType_ParameterizedList::release_type() {
  
  ::io::substrait::ParameterizedType* temp = type_;
  type_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::ParameterizedType* ParameterizedType_ParameterizedList::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedList.type)
  
  ::io::substrait::ParameterizedType* temp = type_;
  type_ = nullptr;
  return temp;
}
inline ::io::substrait::ParameterizedType* ParameterizedType_ParameterizedList::_internal_mutable_type() {
  
  if (type_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::ParameterizedType>(GetArena());
    type_ = p;
  }
  return type_;
}
inline ::io::substrait::ParameterizedType* ParameterizedType_ParameterizedList::mutable_type() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedList.type)
  return _internal_mutable_type();
}
inline void ParameterizedType_ParameterizedList::set_allocated_type(::io::substrait::ParameterizedType* type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete type_;
  }
  if (type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(type);
    if (message_arena != submessage_arena) {
      type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedList.type)
}

// .io.substrait.Type.Variation variation = 2;
inline bool ParameterizedType_ParameterizedList::_internal_has_variation() const {
  return this != internal_default_instance() && variation_ != nullptr;
}
inline bool ParameterizedType_ParameterizedList::has_variation() const {
  return _internal_has_variation();
}
inline const ::io::substrait::Type_Variation& ParameterizedType_ParameterizedList::_internal_variation() const {
  const ::io::substrait::Type_Variation* p = variation_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::Type_Variation&>(
      ::io::substrait::_Type_Variation_default_instance_);
}
inline const ::io::substrait::Type_Variation& ParameterizedType_ParameterizedList::variation() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedList.variation)
  return _internal_variation();
}
inline void ParameterizedType_ParameterizedList::unsafe_arena_set_allocated_variation(
    ::io::substrait::Type_Variation* variation) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation_);
  }
  variation_ = variation;
  if (variation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedList.variation)
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedList::release_variation() {
  
  ::io::substrait::Type_Variation* temp = variation_;
  variation_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedList::unsafe_arena_release_variation() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedList.variation)
  
  ::io::substrait::Type_Variation* temp = variation_;
  variation_ = nullptr;
  return temp;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedList::_internal_mutable_variation() {
  
  if (variation_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::Type_Variation>(GetArena());
    variation_ = p;
  }
  return variation_;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedList::mutable_variation() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedList.variation)
  return _internal_mutable_variation();
}
inline void ParameterizedType_ParameterizedList::set_allocated_variation(::io::substrait::Type_Variation* variation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation_);
  }
  if (variation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation)->GetArena();
    if (message_arena != submessage_arena) {
      variation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, variation, submessage_arena);
    }
    
  } else {
    
  }
  variation_ = variation;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedList.variation)
}

// .io.substrait.Type.Nullability nullability = 3;
inline void ParameterizedType_ParameterizedList::clear_nullability() {
  nullability_ = 0;
}
inline ::io::substrait::Type_Nullability ParameterizedType_ParameterizedList::_internal_nullability() const {
  return static_cast< ::io::substrait::Type_Nullability >(nullability_);
}
inline ::io::substrait::Type_Nullability ParameterizedType_ParameterizedList::nullability() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedList.nullability)
  return _internal_nullability();
}
inline void ParameterizedType_ParameterizedList::_internal_set_nullability(::io::substrait::Type_Nullability value) {
  
  nullability_ = value;
}
inline void ParameterizedType_ParameterizedList::set_nullability(::io::substrait::Type_Nullability value) {
  _internal_set_nullability(value);
  // @@protoc_insertion_point(field_set:io.substrait.ParameterizedType.ParameterizedList.nullability)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedMap

// .io.substrait.ParameterizedType key = 1;
inline bool ParameterizedType_ParameterizedMap::_internal_has_key() const {
  return this != internal_default_instance() && key_ != nullptr;
}
inline bool ParameterizedType_ParameterizedMap::has_key() const {
  return _internal_has_key();
}
inline void ParameterizedType_ParameterizedMap::clear_key() {
  if (GetArena() == nullptr && key_ != nullptr) {
    delete key_;
  }
  key_ = nullptr;
}
inline const ::io::substrait::ParameterizedType& ParameterizedType_ParameterizedMap::_internal_key() const {
  const ::io::substrait::ParameterizedType* p = key_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::ParameterizedType&>(
      ::io::substrait::_ParameterizedType_default_instance_);
}
inline const ::io::substrait::ParameterizedType& ParameterizedType_ParameterizedMap::key() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedMap.key)
  return _internal_key();
}
inline void ParameterizedType_ParameterizedMap::unsafe_arena_set_allocated_key(
    ::io::substrait::ParameterizedType* key) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(key_);
  }
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedMap.key)
}
inline ::io::substrait::ParameterizedType* ParameterizedType_ParameterizedMap::release_key() {
  
  ::io::substrait::ParameterizedType* temp = key_;
  key_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::ParameterizedType* ParameterizedType_ParameterizedMap::unsafe_arena_release_key() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedMap.key)
  
  ::io::substrait::ParameterizedType* temp = key_;
  key_ = nullptr;
  return temp;
}
inline ::io::substrait::ParameterizedType* ParameterizedType_ParameterizedMap::_internal_mutable_key() {
  
  if (key_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::ParameterizedType>(GetArena());
    key_ = p;
  }
  return key_;
}
inline ::io::substrait::ParameterizedType* ParameterizedType_ParameterizedMap::mutable_key() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedMap.key)
  return _internal_mutable_key();
}
inline void ParameterizedType_ParameterizedMap::set_allocated_key(::io::substrait::ParameterizedType* key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete key_;
  }
  if (key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(key);
    if (message_arena != submessage_arena) {
      key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, key, submessage_arena);
    }
    
  } else {
    
  }
  key_ = key;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedMap.key)
}

// .io.substrait.ParameterizedType value = 2;
inline bool ParameterizedType_ParameterizedMap::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool ParameterizedType_ParameterizedMap::has_value() const {
  return _internal_has_value();
}
inline void ParameterizedType_ParameterizedMap::clear_value() {
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
inline const ::io::substrait::ParameterizedType& ParameterizedType_ParameterizedMap::_internal_value() const {
  const ::io::substrait::ParameterizedType* p = value_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::ParameterizedType&>(
      ::io::substrait::_ParameterizedType_default_instance_);
}
inline const ::io::substrait::ParameterizedType& ParameterizedType_ParameterizedMap::value() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedMap.value)
  return _internal_value();
}
inline void ParameterizedType_ParameterizedMap::unsafe_arena_set_allocated_value(
    ::io::substrait::ParameterizedType* value) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedMap.value)
}
inline ::io::substrait::ParameterizedType* ParameterizedType_ParameterizedMap::release_value() {
  
  ::io::substrait::ParameterizedType* temp = value_;
  value_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::ParameterizedType* ParameterizedType_ParameterizedMap::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedMap.value)
  
  ::io::substrait::ParameterizedType* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::io::substrait::ParameterizedType* ParameterizedType_ParameterizedMap::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::ParameterizedType>(GetArena());
    value_ = p;
  }
  return value_;
}
inline ::io::substrait::ParameterizedType* ParameterizedType_ParameterizedMap::mutable_value() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedMap.value)
  return _internal_mutable_value();
}
inline void ParameterizedType_ParameterizedMap::set_allocated_value(::io::substrait::ParameterizedType* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete value_;
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(value);
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedMap.value)
}

// .io.substrait.Type.Variation variation = 3;
inline bool ParameterizedType_ParameterizedMap::_internal_has_variation() const {
  return this != internal_default_instance() && variation_ != nullptr;
}
inline bool ParameterizedType_ParameterizedMap::has_variation() const {
  return _internal_has_variation();
}
inline const ::io::substrait::Type_Variation& ParameterizedType_ParameterizedMap::_internal_variation() const {
  const ::io::substrait::Type_Variation* p = variation_;
  return p != nullptr ? *p : reinterpret_cast<const ::io::substrait::Type_Variation&>(
      ::io::substrait::_Type_Variation_default_instance_);
}
inline const ::io::substrait::Type_Variation& ParameterizedType_ParameterizedMap::variation() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedMap.variation)
  return _internal_variation();
}
inline void ParameterizedType_ParameterizedMap::unsafe_arena_set_allocated_variation(
    ::io::substrait::Type_Variation* variation) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation_);
  }
  variation_ = variation;
  if (variation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.ParameterizedMap.variation)
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedMap::release_variation() {
  
  ::io::substrait::Type_Variation* temp = variation_;
  variation_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedMap::unsafe_arena_release_variation() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.ParameterizedMap.variation)
  
  ::io::substrait::Type_Variation* temp = variation_;
  variation_ = nullptr;
  return temp;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedMap::_internal_mutable_variation() {
  
  if (variation_ == nullptr) {
    auto* p = CreateMaybeMessage<::io::substrait::Type_Variation>(GetArena());
    variation_ = p;
  }
  return variation_;
}
inline ::io::substrait::Type_Variation* ParameterizedType_ParameterizedMap::mutable_variation() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.ParameterizedMap.variation)
  return _internal_mutable_variation();
}
inline void ParameterizedType_ParameterizedMap::set_allocated_variation(::io::substrait::Type_Variation* variation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation_);
  }
  if (variation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variation)->GetArena();
    if (message_arena != submessage_arena) {
      variation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, variation, submessage_arena);
    }
    
  } else {
    
  }
  variation_ = variation;
  // @@protoc_insertion_point(field_set_allocated:io.substrait.ParameterizedType.ParameterizedMap.variation)
}

// .io.substrait.Type.Nullability nullability = 4;
inline void ParameterizedType_ParameterizedMap::clear_nullability() {
  nullability_ = 0;
}
inline ::io::substrait::Type_Nullability ParameterizedType_ParameterizedMap::_internal_nullability() const {
  return static_cast< ::io::substrait::Type_Nullability >(nullability_);
}
inline ::io::substrait::Type_Nullability ParameterizedType_ParameterizedMap::nullability() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.ParameterizedMap.nullability)
  return _internal_nullability();
}
inline void ParameterizedType_ParameterizedMap::_internal_set_nullability(::io::substrait::Type_Nullability value) {
  
  nullability_ = value;
}
inline void ParameterizedType_ParameterizedMap::set_nullability(::io::substrait::Type_Nullability value) {
  _internal_set_nullability(value);
  // @@protoc_insertion_point(field_set:io.substrait.ParameterizedType.ParameterizedMap.nullability)
}

// -------------------------------------------------------------------

// ParameterizedType_IntegerOption

// int32 literal = 1;
inline bool ParameterizedType_IntegerOption::_internal_has_literal() const {
  return integer_type_case() == kLiteral;
}
inline bool ParameterizedType_IntegerOption::has_literal() const {
  return _internal_has_literal();
}
inline void ParameterizedType_IntegerOption::set_has_literal() {
  _oneof_case_[0] = kLiteral;
}
inline void ParameterizedType_IntegerOption::clear_literal() {
  if (_internal_has_literal()) {
    integer_type_.literal_ = 0;
    clear_has_integer_type();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ParameterizedType_IntegerOption::_internal_literal() const {
  if (_internal_has_literal()) {
    return integer_type_.literal_;
  }
  return 0;
}
inline void ParameterizedType_IntegerOption::_internal_set_literal(::PROTOBUF_NAMESPACE_ID::int32 value) {
  if (!_internal_has_literal()) {
    clear_integer_type();
    set_has_literal();
  }
  integer_type_.literal_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ParameterizedType_IntegerOption::literal() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.IntegerOption.literal)
  return _internal_literal();
}
inline void ParameterizedType_IntegerOption::set_literal(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_literal(value);
  // @@protoc_insertion_point(field_set:io.substrait.ParameterizedType.IntegerOption.literal)
}

// .io.substrait.ParameterizedType.IntegerParameter parameter = 2;
inline bool ParameterizedType_IntegerOption::_internal_has_parameter() const {
  return integer_type_case() == kParameter;
}
inline bool ParameterizedType_IntegerOption::has_parameter() const {
  return _internal_has_parameter();
}
inline void ParameterizedType_IntegerOption::set_has_parameter() {
  _oneof_case_[0] = kParameter;
}
inline void ParameterizedType_IntegerOption::clear_parameter() {
  if (_internal_has_parameter()) {
    if (GetArena() == nullptr) {
      delete integer_type_.parameter_;
    }
    clear_has_integer_type();
  }
}
inline ::io::substrait::ParameterizedType_IntegerParameter* ParameterizedType_IntegerOption::release_parameter() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.IntegerOption.parameter)
  if (_internal_has_parameter()) {
    clear_has_integer_type();
      ::io::substrait::ParameterizedType_IntegerParameter* temp = integer_type_.parameter_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    integer_type_.parameter_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::ParameterizedType_IntegerParameter& ParameterizedType_IntegerOption::_internal_parameter() const {
  return _internal_has_parameter()
      ? *integer_type_.parameter_
      : reinterpret_cast< ::io::substrait::ParameterizedType_IntegerParameter&>(::io::substrait::_ParameterizedType_IntegerParameter_default_instance_);
}
inline const ::io::substrait::ParameterizedType_IntegerParameter& ParameterizedType_IntegerOption::parameter() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.IntegerOption.parameter)
  return _internal_parameter();
}
inline ::io::substrait::ParameterizedType_IntegerParameter* ParameterizedType_IntegerOption::unsafe_arena_release_parameter() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.IntegerOption.parameter)
  if (_internal_has_parameter()) {
    clear_has_integer_type();
    ::io::substrait::ParameterizedType_IntegerParameter* temp = integer_type_.parameter_;
    integer_type_.parameter_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType_IntegerOption::unsafe_arena_set_allocated_parameter(::io::substrait::ParameterizedType_IntegerParameter* parameter) {
  clear_integer_type();
  if (parameter) {
    set_has_parameter();
    integer_type_.parameter_ = parameter;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.IntegerOption.parameter)
}
inline ::io::substrait::ParameterizedType_IntegerParameter* ParameterizedType_IntegerOption::_internal_mutable_parameter() {
  if (!_internal_has_parameter()) {
    clear_integer_type();
    set_has_parameter();
    integer_type_.parameter_ = CreateMaybeMessage< ::io::substrait::ParameterizedType_IntegerParameter >(GetArena());
  }
  return integer_type_.parameter_;
}
inline ::io::substrait::ParameterizedType_IntegerParameter* ParameterizedType_IntegerOption::mutable_parameter() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.IntegerOption.parameter)
  return _internal_mutable_parameter();
}

inline bool ParameterizedType_IntegerOption::has_integer_type() const {
  return integer_type_case() != INTEGER_TYPE_NOT_SET;
}
inline void ParameterizedType_IntegerOption::clear_has_integer_type() {
  _oneof_case_[0] = INTEGER_TYPE_NOT_SET;
}
inline ParameterizedType_IntegerOption::IntegerTypeCase ParameterizedType_IntegerOption::integer_type_case() const {
  return ParameterizedType_IntegerOption::IntegerTypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ParameterizedType

// .io.substrait.Type.Boolean bool = 1;
inline bool ParameterizedType::_internal_has_bool_() const {
  return kind_case() == kBool;
}
inline bool ParameterizedType::has_bool_() const {
  return _internal_has_bool_();
}
inline void ParameterizedType::set_has_bool_() {
  _oneof_case_[0] = kBool;
}
inline ::io::substrait::Type_Boolean* ParameterizedType::release_bool_() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.bool)
  if (_internal_has_bool_()) {
    clear_has_kind();
      ::io::substrait::Type_Boolean* temp = kind_.bool__;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.bool__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_Boolean& ParameterizedType::_internal_bool_() const {
  return _internal_has_bool_()
      ? *kind_.bool__
      : reinterpret_cast< ::io::substrait::Type_Boolean&>(::io::substrait::_Type_Boolean_default_instance_);
}
inline const ::io::substrait::Type_Boolean& ParameterizedType::bool_() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.bool)
  return _internal_bool_();
}
inline ::io::substrait::Type_Boolean* ParameterizedType::unsafe_arena_release_bool_() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.bool)
  if (_internal_has_bool_()) {
    clear_has_kind();
    ::io::substrait::Type_Boolean* temp = kind_.bool__;
    kind_.bool__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_bool_(::io::substrait::Type_Boolean* bool_) {
  clear_kind();
  if (bool_) {
    set_has_bool_();
    kind_.bool__ = bool_;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.bool)
}
inline ::io::substrait::Type_Boolean* ParameterizedType::_internal_mutable_bool_() {
  if (!_internal_has_bool_()) {
    clear_kind();
    set_has_bool_();
    kind_.bool__ = CreateMaybeMessage< ::io::substrait::Type_Boolean >(GetArena());
  }
  return kind_.bool__;
}
inline ::io::substrait::Type_Boolean* ParameterizedType::mutable_bool_() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.bool)
  return _internal_mutable_bool_();
}

// .io.substrait.Type.I8 i8 = 2;
inline bool ParameterizedType::_internal_has_i8() const {
  return kind_case() == kI8;
}
inline bool ParameterizedType::has_i8() const {
  return _internal_has_i8();
}
inline void ParameterizedType::set_has_i8() {
  _oneof_case_[0] = kI8;
}
inline ::io::substrait::Type_I8* ParameterizedType::release_i8() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.i8)
  if (_internal_has_i8()) {
    clear_has_kind();
      ::io::substrait::Type_I8* temp = kind_.i8_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.i8_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_I8& ParameterizedType::_internal_i8() const {
  return _internal_has_i8()
      ? *kind_.i8_
      : reinterpret_cast< ::io::substrait::Type_I8&>(::io::substrait::_Type_I8_default_instance_);
}
inline const ::io::substrait::Type_I8& ParameterizedType::i8() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.i8)
  return _internal_i8();
}
inline ::io::substrait::Type_I8* ParameterizedType::unsafe_arena_release_i8() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.i8)
  if (_internal_has_i8()) {
    clear_has_kind();
    ::io::substrait::Type_I8* temp = kind_.i8_;
    kind_.i8_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_i8(::io::substrait::Type_I8* i8) {
  clear_kind();
  if (i8) {
    set_has_i8();
    kind_.i8_ = i8;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.i8)
}
inline ::io::substrait::Type_I8* ParameterizedType::_internal_mutable_i8() {
  if (!_internal_has_i8()) {
    clear_kind();
    set_has_i8();
    kind_.i8_ = CreateMaybeMessage< ::io::substrait::Type_I8 >(GetArena());
  }
  return kind_.i8_;
}
inline ::io::substrait::Type_I8* ParameterizedType::mutable_i8() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.i8)
  return _internal_mutable_i8();
}

// .io.substrait.Type.I16 i16 = 3;
inline bool ParameterizedType::_internal_has_i16() const {
  return kind_case() == kI16;
}
inline bool ParameterizedType::has_i16() const {
  return _internal_has_i16();
}
inline void ParameterizedType::set_has_i16() {
  _oneof_case_[0] = kI16;
}
inline ::io::substrait::Type_I16* ParameterizedType::release_i16() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.i16)
  if (_internal_has_i16()) {
    clear_has_kind();
      ::io::substrait::Type_I16* temp = kind_.i16_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.i16_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_I16& ParameterizedType::_internal_i16() const {
  return _internal_has_i16()
      ? *kind_.i16_
      : reinterpret_cast< ::io::substrait::Type_I16&>(::io::substrait::_Type_I16_default_instance_);
}
inline const ::io::substrait::Type_I16& ParameterizedType::i16() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.i16)
  return _internal_i16();
}
inline ::io::substrait::Type_I16* ParameterizedType::unsafe_arena_release_i16() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.i16)
  if (_internal_has_i16()) {
    clear_has_kind();
    ::io::substrait::Type_I16* temp = kind_.i16_;
    kind_.i16_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_i16(::io::substrait::Type_I16* i16) {
  clear_kind();
  if (i16) {
    set_has_i16();
    kind_.i16_ = i16;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.i16)
}
inline ::io::substrait::Type_I16* ParameterizedType::_internal_mutable_i16() {
  if (!_internal_has_i16()) {
    clear_kind();
    set_has_i16();
    kind_.i16_ = CreateMaybeMessage< ::io::substrait::Type_I16 >(GetArena());
  }
  return kind_.i16_;
}
inline ::io::substrait::Type_I16* ParameterizedType::mutable_i16() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.i16)
  return _internal_mutable_i16();
}

// .io.substrait.Type.I32 i32 = 5;
inline bool ParameterizedType::_internal_has_i32() const {
  return kind_case() == kI32;
}
inline bool ParameterizedType::has_i32() const {
  return _internal_has_i32();
}
inline void ParameterizedType::set_has_i32() {
  _oneof_case_[0] = kI32;
}
inline ::io::substrait::Type_I32* ParameterizedType::release_i32() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.i32)
  if (_internal_has_i32()) {
    clear_has_kind();
      ::io::substrait::Type_I32* temp = kind_.i32_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.i32_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_I32& ParameterizedType::_internal_i32() const {
  return _internal_has_i32()
      ? *kind_.i32_
      : reinterpret_cast< ::io::substrait::Type_I32&>(::io::substrait::_Type_I32_default_instance_);
}
inline const ::io::substrait::Type_I32& ParameterizedType::i32() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.i32)
  return _internal_i32();
}
inline ::io::substrait::Type_I32* ParameterizedType::unsafe_arena_release_i32() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.i32)
  if (_internal_has_i32()) {
    clear_has_kind();
    ::io::substrait::Type_I32* temp = kind_.i32_;
    kind_.i32_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_i32(::io::substrait::Type_I32* i32) {
  clear_kind();
  if (i32) {
    set_has_i32();
    kind_.i32_ = i32;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.i32)
}
inline ::io::substrait::Type_I32* ParameterizedType::_internal_mutable_i32() {
  if (!_internal_has_i32()) {
    clear_kind();
    set_has_i32();
    kind_.i32_ = CreateMaybeMessage< ::io::substrait::Type_I32 >(GetArena());
  }
  return kind_.i32_;
}
inline ::io::substrait::Type_I32* ParameterizedType::mutable_i32() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.i32)
  return _internal_mutable_i32();
}

// .io.substrait.Type.I64 i64 = 7;
inline bool ParameterizedType::_internal_has_i64() const {
  return kind_case() == kI64;
}
inline bool ParameterizedType::has_i64() const {
  return _internal_has_i64();
}
inline void ParameterizedType::set_has_i64() {
  _oneof_case_[0] = kI64;
}
inline ::io::substrait::Type_I64* ParameterizedType::release_i64() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.i64)
  if (_internal_has_i64()) {
    clear_has_kind();
      ::io::substrait::Type_I64* temp = kind_.i64_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.i64_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_I64& ParameterizedType::_internal_i64() const {
  return _internal_has_i64()
      ? *kind_.i64_
      : reinterpret_cast< ::io::substrait::Type_I64&>(::io::substrait::_Type_I64_default_instance_);
}
inline const ::io::substrait::Type_I64& ParameterizedType::i64() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.i64)
  return _internal_i64();
}
inline ::io::substrait::Type_I64* ParameterizedType::unsafe_arena_release_i64() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.i64)
  if (_internal_has_i64()) {
    clear_has_kind();
    ::io::substrait::Type_I64* temp = kind_.i64_;
    kind_.i64_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_i64(::io::substrait::Type_I64* i64) {
  clear_kind();
  if (i64) {
    set_has_i64();
    kind_.i64_ = i64;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.i64)
}
inline ::io::substrait::Type_I64* ParameterizedType::_internal_mutable_i64() {
  if (!_internal_has_i64()) {
    clear_kind();
    set_has_i64();
    kind_.i64_ = CreateMaybeMessage< ::io::substrait::Type_I64 >(GetArena());
  }
  return kind_.i64_;
}
inline ::io::substrait::Type_I64* ParameterizedType::mutable_i64() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.i64)
  return _internal_mutable_i64();
}

// .io.substrait.Type.FP32 fp32 = 10;
inline bool ParameterizedType::_internal_has_fp32() const {
  return kind_case() == kFp32;
}
inline bool ParameterizedType::has_fp32() const {
  return _internal_has_fp32();
}
inline void ParameterizedType::set_has_fp32() {
  _oneof_case_[0] = kFp32;
}
inline ::io::substrait::Type_FP32* ParameterizedType::release_fp32() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.fp32)
  if (_internal_has_fp32()) {
    clear_has_kind();
      ::io::substrait::Type_FP32* temp = kind_.fp32_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.fp32_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_FP32& ParameterizedType::_internal_fp32() const {
  return _internal_has_fp32()
      ? *kind_.fp32_
      : reinterpret_cast< ::io::substrait::Type_FP32&>(::io::substrait::_Type_FP32_default_instance_);
}
inline const ::io::substrait::Type_FP32& ParameterizedType::fp32() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.fp32)
  return _internal_fp32();
}
inline ::io::substrait::Type_FP32* ParameterizedType::unsafe_arena_release_fp32() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.fp32)
  if (_internal_has_fp32()) {
    clear_has_kind();
    ::io::substrait::Type_FP32* temp = kind_.fp32_;
    kind_.fp32_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_fp32(::io::substrait::Type_FP32* fp32) {
  clear_kind();
  if (fp32) {
    set_has_fp32();
    kind_.fp32_ = fp32;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.fp32)
}
inline ::io::substrait::Type_FP32* ParameterizedType::_internal_mutable_fp32() {
  if (!_internal_has_fp32()) {
    clear_kind();
    set_has_fp32();
    kind_.fp32_ = CreateMaybeMessage< ::io::substrait::Type_FP32 >(GetArena());
  }
  return kind_.fp32_;
}
inline ::io::substrait::Type_FP32* ParameterizedType::mutable_fp32() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.fp32)
  return _internal_mutable_fp32();
}

// .io.substrait.Type.FP64 fp64 = 11;
inline bool ParameterizedType::_internal_has_fp64() const {
  return kind_case() == kFp64;
}
inline bool ParameterizedType::has_fp64() const {
  return _internal_has_fp64();
}
inline void ParameterizedType::set_has_fp64() {
  _oneof_case_[0] = kFp64;
}
inline ::io::substrait::Type_FP64* ParameterizedType::release_fp64() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.fp64)
  if (_internal_has_fp64()) {
    clear_has_kind();
      ::io::substrait::Type_FP64* temp = kind_.fp64_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.fp64_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_FP64& ParameterizedType::_internal_fp64() const {
  return _internal_has_fp64()
      ? *kind_.fp64_
      : reinterpret_cast< ::io::substrait::Type_FP64&>(::io::substrait::_Type_FP64_default_instance_);
}
inline const ::io::substrait::Type_FP64& ParameterizedType::fp64() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.fp64)
  return _internal_fp64();
}
inline ::io::substrait::Type_FP64* ParameterizedType::unsafe_arena_release_fp64() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.fp64)
  if (_internal_has_fp64()) {
    clear_has_kind();
    ::io::substrait::Type_FP64* temp = kind_.fp64_;
    kind_.fp64_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_fp64(::io::substrait::Type_FP64* fp64) {
  clear_kind();
  if (fp64) {
    set_has_fp64();
    kind_.fp64_ = fp64;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.fp64)
}
inline ::io::substrait::Type_FP64* ParameterizedType::_internal_mutable_fp64() {
  if (!_internal_has_fp64()) {
    clear_kind();
    set_has_fp64();
    kind_.fp64_ = CreateMaybeMessage< ::io::substrait::Type_FP64 >(GetArena());
  }
  return kind_.fp64_;
}
inline ::io::substrait::Type_FP64* ParameterizedType::mutable_fp64() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.fp64)
  return _internal_mutable_fp64();
}

// .io.substrait.Type.String string = 12;
inline bool ParameterizedType::_internal_has_string() const {
  return kind_case() == kString;
}
inline bool ParameterizedType::has_string() const {
  return _internal_has_string();
}
inline void ParameterizedType::set_has_string() {
  _oneof_case_[0] = kString;
}
inline ::io::substrait::Type_String* ParameterizedType::release_string() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.string)
  if (_internal_has_string()) {
    clear_has_kind();
      ::io::substrait::Type_String* temp = kind_.string_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.string_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_String& ParameterizedType::_internal_string() const {
  return _internal_has_string()
      ? *kind_.string_
      : reinterpret_cast< ::io::substrait::Type_String&>(::io::substrait::_Type_String_default_instance_);
}
inline const ::io::substrait::Type_String& ParameterizedType::string() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.string)
  return _internal_string();
}
inline ::io::substrait::Type_String* ParameterizedType::unsafe_arena_release_string() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.string)
  if (_internal_has_string()) {
    clear_has_kind();
    ::io::substrait::Type_String* temp = kind_.string_;
    kind_.string_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_string(::io::substrait::Type_String* string) {
  clear_kind();
  if (string) {
    set_has_string();
    kind_.string_ = string;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.string)
}
inline ::io::substrait::Type_String* ParameterizedType::_internal_mutable_string() {
  if (!_internal_has_string()) {
    clear_kind();
    set_has_string();
    kind_.string_ = CreateMaybeMessage< ::io::substrait::Type_String >(GetArena());
  }
  return kind_.string_;
}
inline ::io::substrait::Type_String* ParameterizedType::mutable_string() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.string)
  return _internal_mutable_string();
}

// .io.substrait.Type.Binary binary = 13;
inline bool ParameterizedType::_internal_has_binary() const {
  return kind_case() == kBinary;
}
inline bool ParameterizedType::has_binary() const {
  return _internal_has_binary();
}
inline void ParameterizedType::set_has_binary() {
  _oneof_case_[0] = kBinary;
}
inline ::io::substrait::Type_Binary* ParameterizedType::release_binary() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.binary)
  if (_internal_has_binary()) {
    clear_has_kind();
      ::io::substrait::Type_Binary* temp = kind_.binary_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.binary_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_Binary& ParameterizedType::_internal_binary() const {
  return _internal_has_binary()
      ? *kind_.binary_
      : reinterpret_cast< ::io::substrait::Type_Binary&>(::io::substrait::_Type_Binary_default_instance_);
}
inline const ::io::substrait::Type_Binary& ParameterizedType::binary() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.binary)
  return _internal_binary();
}
inline ::io::substrait::Type_Binary* ParameterizedType::unsafe_arena_release_binary() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.binary)
  if (_internal_has_binary()) {
    clear_has_kind();
    ::io::substrait::Type_Binary* temp = kind_.binary_;
    kind_.binary_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_binary(::io::substrait::Type_Binary* binary) {
  clear_kind();
  if (binary) {
    set_has_binary();
    kind_.binary_ = binary;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.binary)
}
inline ::io::substrait::Type_Binary* ParameterizedType::_internal_mutable_binary() {
  if (!_internal_has_binary()) {
    clear_kind();
    set_has_binary();
    kind_.binary_ = CreateMaybeMessage< ::io::substrait::Type_Binary >(GetArena());
  }
  return kind_.binary_;
}
inline ::io::substrait::Type_Binary* ParameterizedType::mutable_binary() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.binary)
  return _internal_mutable_binary();
}

// .io.substrait.Type.Timestamp timestamp = 14;
inline bool ParameterizedType::_internal_has_timestamp() const {
  return kind_case() == kTimestamp;
}
inline bool ParameterizedType::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void ParameterizedType::set_has_timestamp() {
  _oneof_case_[0] = kTimestamp;
}
inline ::io::substrait::Type_Timestamp* ParameterizedType::release_timestamp() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.timestamp)
  if (_internal_has_timestamp()) {
    clear_has_kind();
      ::io::substrait::Type_Timestamp* temp = kind_.timestamp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.timestamp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_Timestamp& ParameterizedType::_internal_timestamp() const {
  return _internal_has_timestamp()
      ? *kind_.timestamp_
      : reinterpret_cast< ::io::substrait::Type_Timestamp&>(::io::substrait::_Type_Timestamp_default_instance_);
}
inline const ::io::substrait::Type_Timestamp& ParameterizedType::timestamp() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.timestamp)
  return _internal_timestamp();
}
inline ::io::substrait::Type_Timestamp* ParameterizedType::unsafe_arena_release_timestamp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.timestamp)
  if (_internal_has_timestamp()) {
    clear_has_kind();
    ::io::substrait::Type_Timestamp* temp = kind_.timestamp_;
    kind_.timestamp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_timestamp(::io::substrait::Type_Timestamp* timestamp) {
  clear_kind();
  if (timestamp) {
    set_has_timestamp();
    kind_.timestamp_ = timestamp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.timestamp)
}
inline ::io::substrait::Type_Timestamp* ParameterizedType::_internal_mutable_timestamp() {
  if (!_internal_has_timestamp()) {
    clear_kind();
    set_has_timestamp();
    kind_.timestamp_ = CreateMaybeMessage< ::io::substrait::Type_Timestamp >(GetArena());
  }
  return kind_.timestamp_;
}
inline ::io::substrait::Type_Timestamp* ParameterizedType::mutable_timestamp() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.timestamp)
  return _internal_mutable_timestamp();
}

// .io.substrait.Type.Date date = 16;
inline bool ParameterizedType::_internal_has_date() const {
  return kind_case() == kDate;
}
inline bool ParameterizedType::has_date() const {
  return _internal_has_date();
}
inline void ParameterizedType::set_has_date() {
  _oneof_case_[0] = kDate;
}
inline ::io::substrait::Type_Date* ParameterizedType::release_date() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.date)
  if (_internal_has_date()) {
    clear_has_kind();
      ::io::substrait::Type_Date* temp = kind_.date_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.date_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_Date& ParameterizedType::_internal_date() const {
  return _internal_has_date()
      ? *kind_.date_
      : reinterpret_cast< ::io::substrait::Type_Date&>(::io::substrait::_Type_Date_default_instance_);
}
inline const ::io::substrait::Type_Date& ParameterizedType::date() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.date)
  return _internal_date();
}
inline ::io::substrait::Type_Date* ParameterizedType::unsafe_arena_release_date() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.date)
  if (_internal_has_date()) {
    clear_has_kind();
    ::io::substrait::Type_Date* temp = kind_.date_;
    kind_.date_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_date(::io::substrait::Type_Date* date) {
  clear_kind();
  if (date) {
    set_has_date();
    kind_.date_ = date;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.date)
}
inline ::io::substrait::Type_Date* ParameterizedType::_internal_mutable_date() {
  if (!_internal_has_date()) {
    clear_kind();
    set_has_date();
    kind_.date_ = CreateMaybeMessage< ::io::substrait::Type_Date >(GetArena());
  }
  return kind_.date_;
}
inline ::io::substrait::Type_Date* ParameterizedType::mutable_date() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.date)
  return _internal_mutable_date();
}

// .io.substrait.Type.Time time = 17;
inline bool ParameterizedType::_internal_has_time() const {
  return kind_case() == kTime;
}
inline bool ParameterizedType::has_time() const {
  return _internal_has_time();
}
inline void ParameterizedType::set_has_time() {
  _oneof_case_[0] = kTime;
}
inline ::io::substrait::Type_Time* ParameterizedType::release_time() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.time)
  if (_internal_has_time()) {
    clear_has_kind();
      ::io::substrait::Type_Time* temp = kind_.time_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.time_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_Time& ParameterizedType::_internal_time() const {
  return _internal_has_time()
      ? *kind_.time_
      : reinterpret_cast< ::io::substrait::Type_Time&>(::io::substrait::_Type_Time_default_instance_);
}
inline const ::io::substrait::Type_Time& ParameterizedType::time() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.time)
  return _internal_time();
}
inline ::io::substrait::Type_Time* ParameterizedType::unsafe_arena_release_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.time)
  if (_internal_has_time()) {
    clear_has_kind();
    ::io::substrait::Type_Time* temp = kind_.time_;
    kind_.time_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_time(::io::substrait::Type_Time* time) {
  clear_kind();
  if (time) {
    set_has_time();
    kind_.time_ = time;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.time)
}
inline ::io::substrait::Type_Time* ParameterizedType::_internal_mutable_time() {
  if (!_internal_has_time()) {
    clear_kind();
    set_has_time();
    kind_.time_ = CreateMaybeMessage< ::io::substrait::Type_Time >(GetArena());
  }
  return kind_.time_;
}
inline ::io::substrait::Type_Time* ParameterizedType::mutable_time() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.time)
  return _internal_mutable_time();
}

// .io.substrait.Type.IntervalYear interval_year = 19;
inline bool ParameterizedType::_internal_has_interval_year() const {
  return kind_case() == kIntervalYear;
}
inline bool ParameterizedType::has_interval_year() const {
  return _internal_has_interval_year();
}
inline void ParameterizedType::set_has_interval_year() {
  _oneof_case_[0] = kIntervalYear;
}
inline ::io::substrait::Type_IntervalYear* ParameterizedType::release_interval_year() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.interval_year)
  if (_internal_has_interval_year()) {
    clear_has_kind();
      ::io::substrait::Type_IntervalYear* temp = kind_.interval_year_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.interval_year_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_IntervalYear& ParameterizedType::_internal_interval_year() const {
  return _internal_has_interval_year()
      ? *kind_.interval_year_
      : reinterpret_cast< ::io::substrait::Type_IntervalYear&>(::io::substrait::_Type_IntervalYear_default_instance_);
}
inline const ::io::substrait::Type_IntervalYear& ParameterizedType::interval_year() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.interval_year)
  return _internal_interval_year();
}
inline ::io::substrait::Type_IntervalYear* ParameterizedType::unsafe_arena_release_interval_year() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.interval_year)
  if (_internal_has_interval_year()) {
    clear_has_kind();
    ::io::substrait::Type_IntervalYear* temp = kind_.interval_year_;
    kind_.interval_year_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_interval_year(::io::substrait::Type_IntervalYear* interval_year) {
  clear_kind();
  if (interval_year) {
    set_has_interval_year();
    kind_.interval_year_ = interval_year;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.interval_year)
}
inline ::io::substrait::Type_IntervalYear* ParameterizedType::_internal_mutable_interval_year() {
  if (!_internal_has_interval_year()) {
    clear_kind();
    set_has_interval_year();
    kind_.interval_year_ = CreateMaybeMessage< ::io::substrait::Type_IntervalYear >(GetArena());
  }
  return kind_.interval_year_;
}
inline ::io::substrait::Type_IntervalYear* ParameterizedType::mutable_interval_year() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.interval_year)
  return _internal_mutable_interval_year();
}

// .io.substrait.Type.IntervalDay interval_day = 20;
inline bool ParameterizedType::_internal_has_interval_day() const {
  return kind_case() == kIntervalDay;
}
inline bool ParameterizedType::has_interval_day() const {
  return _internal_has_interval_day();
}
inline void ParameterizedType::set_has_interval_day() {
  _oneof_case_[0] = kIntervalDay;
}
inline ::io::substrait::Type_IntervalDay* ParameterizedType::release_interval_day() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.interval_day)
  if (_internal_has_interval_day()) {
    clear_has_kind();
      ::io::substrait::Type_IntervalDay* temp = kind_.interval_day_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.interval_day_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_IntervalDay& ParameterizedType::_internal_interval_day() const {
  return _internal_has_interval_day()
      ? *kind_.interval_day_
      : reinterpret_cast< ::io::substrait::Type_IntervalDay&>(::io::substrait::_Type_IntervalDay_default_instance_);
}
inline const ::io::substrait::Type_IntervalDay& ParameterizedType::interval_day() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.interval_day)
  return _internal_interval_day();
}
inline ::io::substrait::Type_IntervalDay* ParameterizedType::unsafe_arena_release_interval_day() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.interval_day)
  if (_internal_has_interval_day()) {
    clear_has_kind();
    ::io::substrait::Type_IntervalDay* temp = kind_.interval_day_;
    kind_.interval_day_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_interval_day(::io::substrait::Type_IntervalDay* interval_day) {
  clear_kind();
  if (interval_day) {
    set_has_interval_day();
    kind_.interval_day_ = interval_day;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.interval_day)
}
inline ::io::substrait::Type_IntervalDay* ParameterizedType::_internal_mutable_interval_day() {
  if (!_internal_has_interval_day()) {
    clear_kind();
    set_has_interval_day();
    kind_.interval_day_ = CreateMaybeMessage< ::io::substrait::Type_IntervalDay >(GetArena());
  }
  return kind_.interval_day_;
}
inline ::io::substrait::Type_IntervalDay* ParameterizedType::mutable_interval_day() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.interval_day)
  return _internal_mutable_interval_day();
}

// .io.substrait.Type.TimestampTZ timestamp_tz = 29;
inline bool ParameterizedType::_internal_has_timestamp_tz() const {
  return kind_case() == kTimestampTz;
}
inline bool ParameterizedType::has_timestamp_tz() const {
  return _internal_has_timestamp_tz();
}
inline void ParameterizedType::set_has_timestamp_tz() {
  _oneof_case_[0] = kTimestampTz;
}
inline ::io::substrait::Type_TimestampTZ* ParameterizedType::release_timestamp_tz() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.timestamp_tz)
  if (_internal_has_timestamp_tz()) {
    clear_has_kind();
      ::io::substrait::Type_TimestampTZ* temp = kind_.timestamp_tz_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.timestamp_tz_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_TimestampTZ& ParameterizedType::_internal_timestamp_tz() const {
  return _internal_has_timestamp_tz()
      ? *kind_.timestamp_tz_
      : reinterpret_cast< ::io::substrait::Type_TimestampTZ&>(::io::substrait::_Type_TimestampTZ_default_instance_);
}
inline const ::io::substrait::Type_TimestampTZ& ParameterizedType::timestamp_tz() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.timestamp_tz)
  return _internal_timestamp_tz();
}
inline ::io::substrait::Type_TimestampTZ* ParameterizedType::unsafe_arena_release_timestamp_tz() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.timestamp_tz)
  if (_internal_has_timestamp_tz()) {
    clear_has_kind();
    ::io::substrait::Type_TimestampTZ* temp = kind_.timestamp_tz_;
    kind_.timestamp_tz_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_timestamp_tz(::io::substrait::Type_TimestampTZ* timestamp_tz) {
  clear_kind();
  if (timestamp_tz) {
    set_has_timestamp_tz();
    kind_.timestamp_tz_ = timestamp_tz;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.timestamp_tz)
}
inline ::io::substrait::Type_TimestampTZ* ParameterizedType::_internal_mutable_timestamp_tz() {
  if (!_internal_has_timestamp_tz()) {
    clear_kind();
    set_has_timestamp_tz();
    kind_.timestamp_tz_ = CreateMaybeMessage< ::io::substrait::Type_TimestampTZ >(GetArena());
  }
  return kind_.timestamp_tz_;
}
inline ::io::substrait::Type_TimestampTZ* ParameterizedType::mutable_timestamp_tz() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.timestamp_tz)
  return _internal_mutable_timestamp_tz();
}

// .io.substrait.Type.UUID uuid = 32;
inline bool ParameterizedType::_internal_has_uuid() const {
  return kind_case() == kUuid;
}
inline bool ParameterizedType::has_uuid() const {
  return _internal_has_uuid();
}
inline void ParameterizedType::set_has_uuid() {
  _oneof_case_[0] = kUuid;
}
inline ::io::substrait::Type_UUID* ParameterizedType::release_uuid() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.uuid)
  if (_internal_has_uuid()) {
    clear_has_kind();
      ::io::substrait::Type_UUID* temp = kind_.uuid_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.uuid_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Type_UUID& ParameterizedType::_internal_uuid() const {
  return _internal_has_uuid()
      ? *kind_.uuid_
      : reinterpret_cast< ::io::substrait::Type_UUID&>(::io::substrait::_Type_UUID_default_instance_);
}
inline const ::io::substrait::Type_UUID& ParameterizedType::uuid() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.uuid)
  return _internal_uuid();
}
inline ::io::substrait::Type_UUID* ParameterizedType::unsafe_arena_release_uuid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.uuid)
  if (_internal_has_uuid()) {
    clear_has_kind();
    ::io::substrait::Type_UUID* temp = kind_.uuid_;
    kind_.uuid_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_uuid(::io::substrait::Type_UUID* uuid) {
  clear_kind();
  if (uuid) {
    set_has_uuid();
    kind_.uuid_ = uuid;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.uuid)
}
inline ::io::substrait::Type_UUID* ParameterizedType::_internal_mutable_uuid() {
  if (!_internal_has_uuid()) {
    clear_kind();
    set_has_uuid();
    kind_.uuid_ = CreateMaybeMessage< ::io::substrait::Type_UUID >(GetArena());
  }
  return kind_.uuid_;
}
inline ::io::substrait::Type_UUID* ParameterizedType::mutable_uuid() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.uuid)
  return _internal_mutable_uuid();
}

// .io.substrait.ParameterizedType.ParameterizedFixedChar fixed_char = 21;
inline bool ParameterizedType::_internal_has_fixed_char() const {
  return kind_case() == kFixedChar;
}
inline bool ParameterizedType::has_fixed_char() const {
  return _internal_has_fixed_char();
}
inline void ParameterizedType::set_has_fixed_char() {
  _oneof_case_[0] = kFixedChar;
}
inline void ParameterizedType::clear_fixed_char() {
  if (_internal_has_fixed_char()) {
    if (GetArena() == nullptr) {
      delete kind_.fixed_char_;
    }
    clear_has_kind();
  }
}
inline ::io::substrait::ParameterizedType_ParameterizedFixedChar* ParameterizedType::release_fixed_char() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.fixed_char)
  if (_internal_has_fixed_char()) {
    clear_has_kind();
      ::io::substrait::ParameterizedType_ParameterizedFixedChar* temp = kind_.fixed_char_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.fixed_char_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::ParameterizedType_ParameterizedFixedChar& ParameterizedType::_internal_fixed_char() const {
  return _internal_has_fixed_char()
      ? *kind_.fixed_char_
      : reinterpret_cast< ::io::substrait::ParameterizedType_ParameterizedFixedChar&>(::io::substrait::_ParameterizedType_ParameterizedFixedChar_default_instance_);
}
inline const ::io::substrait::ParameterizedType_ParameterizedFixedChar& ParameterizedType::fixed_char() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.fixed_char)
  return _internal_fixed_char();
}
inline ::io::substrait::ParameterizedType_ParameterizedFixedChar* ParameterizedType::unsafe_arena_release_fixed_char() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.fixed_char)
  if (_internal_has_fixed_char()) {
    clear_has_kind();
    ::io::substrait::ParameterizedType_ParameterizedFixedChar* temp = kind_.fixed_char_;
    kind_.fixed_char_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_fixed_char(::io::substrait::ParameterizedType_ParameterizedFixedChar* fixed_char) {
  clear_kind();
  if (fixed_char) {
    set_has_fixed_char();
    kind_.fixed_char_ = fixed_char;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.fixed_char)
}
inline ::io::substrait::ParameterizedType_ParameterizedFixedChar* ParameterizedType::_internal_mutable_fixed_char() {
  if (!_internal_has_fixed_char()) {
    clear_kind();
    set_has_fixed_char();
    kind_.fixed_char_ = CreateMaybeMessage< ::io::substrait::ParameterizedType_ParameterizedFixedChar >(GetArena());
  }
  return kind_.fixed_char_;
}
inline ::io::substrait::ParameterizedType_ParameterizedFixedChar* ParameterizedType::mutable_fixed_char() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.fixed_char)
  return _internal_mutable_fixed_char();
}

// .io.substrait.ParameterizedType.ParameterizedVarChar varchar = 22;
inline bool ParameterizedType::_internal_has_varchar() const {
  return kind_case() == kVarchar;
}
inline bool ParameterizedType::has_varchar() const {
  return _internal_has_varchar();
}
inline void ParameterizedType::set_has_varchar() {
  _oneof_case_[0] = kVarchar;
}
inline void ParameterizedType::clear_varchar() {
  if (_internal_has_varchar()) {
    if (GetArena() == nullptr) {
      delete kind_.varchar_;
    }
    clear_has_kind();
  }
}
inline ::io::substrait::ParameterizedType_ParameterizedVarChar* ParameterizedType::release_varchar() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.varchar)
  if (_internal_has_varchar()) {
    clear_has_kind();
      ::io::substrait::ParameterizedType_ParameterizedVarChar* temp = kind_.varchar_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.varchar_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::ParameterizedType_ParameterizedVarChar& ParameterizedType::_internal_varchar() const {
  return _internal_has_varchar()
      ? *kind_.varchar_
      : reinterpret_cast< ::io::substrait::ParameterizedType_ParameterizedVarChar&>(::io::substrait::_ParameterizedType_ParameterizedVarChar_default_instance_);
}
inline const ::io::substrait::ParameterizedType_ParameterizedVarChar& ParameterizedType::varchar() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.varchar)
  return _internal_varchar();
}
inline ::io::substrait::ParameterizedType_ParameterizedVarChar* ParameterizedType::unsafe_arena_release_varchar() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.varchar)
  if (_internal_has_varchar()) {
    clear_has_kind();
    ::io::substrait::ParameterizedType_ParameterizedVarChar* temp = kind_.varchar_;
    kind_.varchar_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_varchar(::io::substrait::ParameterizedType_ParameterizedVarChar* varchar) {
  clear_kind();
  if (varchar) {
    set_has_varchar();
    kind_.varchar_ = varchar;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.varchar)
}
inline ::io::substrait::ParameterizedType_ParameterizedVarChar* ParameterizedType::_internal_mutable_varchar() {
  if (!_internal_has_varchar()) {
    clear_kind();
    set_has_varchar();
    kind_.varchar_ = CreateMaybeMessage< ::io::substrait::ParameterizedType_ParameterizedVarChar >(GetArena());
  }
  return kind_.varchar_;
}
inline ::io::substrait::ParameterizedType_ParameterizedVarChar* ParameterizedType::mutable_varchar() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.varchar)
  return _internal_mutable_varchar();
}

// .io.substrait.ParameterizedType.ParameterizedFixedBinary fixed_binary = 23;
inline bool ParameterizedType::_internal_has_fixed_binary() const {
  return kind_case() == kFixedBinary;
}
inline bool ParameterizedType::has_fixed_binary() const {
  return _internal_has_fixed_binary();
}
inline void ParameterizedType::set_has_fixed_binary() {
  _oneof_case_[0] = kFixedBinary;
}
inline void ParameterizedType::clear_fixed_binary() {
  if (_internal_has_fixed_binary()) {
    if (GetArena() == nullptr) {
      delete kind_.fixed_binary_;
    }
    clear_has_kind();
  }
}
inline ::io::substrait::ParameterizedType_ParameterizedFixedBinary* ParameterizedType::release_fixed_binary() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.fixed_binary)
  if (_internal_has_fixed_binary()) {
    clear_has_kind();
      ::io::substrait::ParameterizedType_ParameterizedFixedBinary* temp = kind_.fixed_binary_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.fixed_binary_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::ParameterizedType_ParameterizedFixedBinary& ParameterizedType::_internal_fixed_binary() const {
  return _internal_has_fixed_binary()
      ? *kind_.fixed_binary_
      : reinterpret_cast< ::io::substrait::ParameterizedType_ParameterizedFixedBinary&>(::io::substrait::_ParameterizedType_ParameterizedFixedBinary_default_instance_);
}
inline const ::io::substrait::ParameterizedType_ParameterizedFixedBinary& ParameterizedType::fixed_binary() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.fixed_binary)
  return _internal_fixed_binary();
}
inline ::io::substrait::ParameterizedType_ParameterizedFixedBinary* ParameterizedType::unsafe_arena_release_fixed_binary() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.fixed_binary)
  if (_internal_has_fixed_binary()) {
    clear_has_kind();
    ::io::substrait::ParameterizedType_ParameterizedFixedBinary* temp = kind_.fixed_binary_;
    kind_.fixed_binary_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_fixed_binary(::io::substrait::ParameterizedType_ParameterizedFixedBinary* fixed_binary) {
  clear_kind();
  if (fixed_binary) {
    set_has_fixed_binary();
    kind_.fixed_binary_ = fixed_binary;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.fixed_binary)
}
inline ::io::substrait::ParameterizedType_ParameterizedFixedBinary* ParameterizedType::_internal_mutable_fixed_binary() {
  if (!_internal_has_fixed_binary()) {
    clear_kind();
    set_has_fixed_binary();
    kind_.fixed_binary_ = CreateMaybeMessage< ::io::substrait::ParameterizedType_ParameterizedFixedBinary >(GetArena());
  }
  return kind_.fixed_binary_;
}
inline ::io::substrait::ParameterizedType_ParameterizedFixedBinary* ParameterizedType::mutable_fixed_binary() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.fixed_binary)
  return _internal_mutable_fixed_binary();
}

// .io.substrait.ParameterizedType.ParameterizedDecimal decimal = 24;
inline bool ParameterizedType::_internal_has_decimal() const {
  return kind_case() == kDecimal;
}
inline bool ParameterizedType::has_decimal() const {
  return _internal_has_decimal();
}
inline void ParameterizedType::set_has_decimal() {
  _oneof_case_[0] = kDecimal;
}
inline void ParameterizedType::clear_decimal() {
  if (_internal_has_decimal()) {
    if (GetArena() == nullptr) {
      delete kind_.decimal_;
    }
    clear_has_kind();
  }
}
inline ::io::substrait::ParameterizedType_ParameterizedDecimal* ParameterizedType::release_decimal() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.decimal)
  if (_internal_has_decimal()) {
    clear_has_kind();
      ::io::substrait::ParameterizedType_ParameterizedDecimal* temp = kind_.decimal_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.decimal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::ParameterizedType_ParameterizedDecimal& ParameterizedType::_internal_decimal() const {
  return _internal_has_decimal()
      ? *kind_.decimal_
      : reinterpret_cast< ::io::substrait::ParameterizedType_ParameterizedDecimal&>(::io::substrait::_ParameterizedType_ParameterizedDecimal_default_instance_);
}
inline const ::io::substrait::ParameterizedType_ParameterizedDecimal& ParameterizedType::decimal() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.decimal)
  return _internal_decimal();
}
inline ::io::substrait::ParameterizedType_ParameterizedDecimal* ParameterizedType::unsafe_arena_release_decimal() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.decimal)
  if (_internal_has_decimal()) {
    clear_has_kind();
    ::io::substrait::ParameterizedType_ParameterizedDecimal* temp = kind_.decimal_;
    kind_.decimal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_decimal(::io::substrait::ParameterizedType_ParameterizedDecimal* decimal) {
  clear_kind();
  if (decimal) {
    set_has_decimal();
    kind_.decimal_ = decimal;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.decimal)
}
inline ::io::substrait::ParameterizedType_ParameterizedDecimal* ParameterizedType::_internal_mutable_decimal() {
  if (!_internal_has_decimal()) {
    clear_kind();
    set_has_decimal();
    kind_.decimal_ = CreateMaybeMessage< ::io::substrait::ParameterizedType_ParameterizedDecimal >(GetArena());
  }
  return kind_.decimal_;
}
inline ::io::substrait::ParameterizedType_ParameterizedDecimal* ParameterizedType::mutable_decimal() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.decimal)
  return _internal_mutable_decimal();
}

// .io.substrait.ParameterizedType.ParameterizedStruct struct = 25;
inline bool ParameterizedType::_internal_has_struct_() const {
  return kind_case() == kStruct;
}
inline bool ParameterizedType::has_struct_() const {
  return _internal_has_struct_();
}
inline void ParameterizedType::set_has_struct_() {
  _oneof_case_[0] = kStruct;
}
inline void ParameterizedType::clear_struct_() {
  if (_internal_has_struct_()) {
    if (GetArena() == nullptr) {
      delete kind_.struct__;
    }
    clear_has_kind();
  }
}
inline ::io::substrait::ParameterizedType_ParameterizedStruct* ParameterizedType::release_struct_() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.struct)
  if (_internal_has_struct_()) {
    clear_has_kind();
      ::io::substrait::ParameterizedType_ParameterizedStruct* temp = kind_.struct__;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.struct__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::ParameterizedType_ParameterizedStruct& ParameterizedType::_internal_struct_() const {
  return _internal_has_struct_()
      ? *kind_.struct__
      : reinterpret_cast< ::io::substrait::ParameterizedType_ParameterizedStruct&>(::io::substrait::_ParameterizedType_ParameterizedStruct_default_instance_);
}
inline const ::io::substrait::ParameterizedType_ParameterizedStruct& ParameterizedType::struct_() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.struct)
  return _internal_struct_();
}
inline ::io::substrait::ParameterizedType_ParameterizedStruct* ParameterizedType::unsafe_arena_release_struct_() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.struct)
  if (_internal_has_struct_()) {
    clear_has_kind();
    ::io::substrait::ParameterizedType_ParameterizedStruct* temp = kind_.struct__;
    kind_.struct__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_struct_(::io::substrait::ParameterizedType_ParameterizedStruct* struct_) {
  clear_kind();
  if (struct_) {
    set_has_struct_();
    kind_.struct__ = struct_;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.struct)
}
inline ::io::substrait::ParameterizedType_ParameterizedStruct* ParameterizedType::_internal_mutable_struct_() {
  if (!_internal_has_struct_()) {
    clear_kind();
    set_has_struct_();
    kind_.struct__ = CreateMaybeMessage< ::io::substrait::ParameterizedType_ParameterizedStruct >(GetArena());
  }
  return kind_.struct__;
}
inline ::io::substrait::ParameterizedType_ParameterizedStruct* ParameterizedType::mutable_struct_() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.struct)
  return _internal_mutable_struct_();
}

// .io.substrait.ParameterizedType.ParameterizedList list = 27;
inline bool ParameterizedType::_internal_has_list() const {
  return kind_case() == kList;
}
inline bool ParameterizedType::has_list() const {
  return _internal_has_list();
}
inline void ParameterizedType::set_has_list() {
  _oneof_case_[0] = kList;
}
inline void ParameterizedType::clear_list() {
  if (_internal_has_list()) {
    if (GetArena() == nullptr) {
      delete kind_.list_;
    }
    clear_has_kind();
  }
}
inline ::io::substrait::ParameterizedType_ParameterizedList* ParameterizedType::release_list() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.list)
  if (_internal_has_list()) {
    clear_has_kind();
      ::io::substrait::ParameterizedType_ParameterizedList* temp = kind_.list_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::ParameterizedType_ParameterizedList& ParameterizedType::_internal_list() const {
  return _internal_has_list()
      ? *kind_.list_
      : reinterpret_cast< ::io::substrait::ParameterizedType_ParameterizedList&>(::io::substrait::_ParameterizedType_ParameterizedList_default_instance_);
}
inline const ::io::substrait::ParameterizedType_ParameterizedList& ParameterizedType::list() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.list)
  return _internal_list();
}
inline ::io::substrait::ParameterizedType_ParameterizedList* ParameterizedType::unsafe_arena_release_list() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.list)
  if (_internal_has_list()) {
    clear_has_kind();
    ::io::substrait::ParameterizedType_ParameterizedList* temp = kind_.list_;
    kind_.list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_list(::io::substrait::ParameterizedType_ParameterizedList* list) {
  clear_kind();
  if (list) {
    set_has_list();
    kind_.list_ = list;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.list)
}
inline ::io::substrait::ParameterizedType_ParameterizedList* ParameterizedType::_internal_mutable_list() {
  if (!_internal_has_list()) {
    clear_kind();
    set_has_list();
    kind_.list_ = CreateMaybeMessage< ::io::substrait::ParameterizedType_ParameterizedList >(GetArena());
  }
  return kind_.list_;
}
inline ::io::substrait::ParameterizedType_ParameterizedList* ParameterizedType::mutable_list() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.list)
  return _internal_mutable_list();
}

// .io.substrait.ParameterizedType.ParameterizedMap map = 28;
inline bool ParameterizedType::_internal_has_map() const {
  return kind_case() == kMap;
}
inline bool ParameterizedType::has_map() const {
  return _internal_has_map();
}
inline void ParameterizedType::set_has_map() {
  _oneof_case_[0] = kMap;
}
inline void ParameterizedType::clear_map() {
  if (_internal_has_map()) {
    if (GetArena() == nullptr) {
      delete kind_.map_;
    }
    clear_has_kind();
  }
}
inline ::io::substrait::ParameterizedType_ParameterizedMap* ParameterizedType::release_map() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.map)
  if (_internal_has_map()) {
    clear_has_kind();
      ::io::substrait::ParameterizedType_ParameterizedMap* temp = kind_.map_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.map_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::ParameterizedType_ParameterizedMap& ParameterizedType::_internal_map() const {
  return _internal_has_map()
      ? *kind_.map_
      : reinterpret_cast< ::io::substrait::ParameterizedType_ParameterizedMap&>(::io::substrait::_ParameterizedType_ParameterizedMap_default_instance_);
}
inline const ::io::substrait::ParameterizedType_ParameterizedMap& ParameterizedType::map() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.map)
  return _internal_map();
}
inline ::io::substrait::ParameterizedType_ParameterizedMap* ParameterizedType::unsafe_arena_release_map() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.map)
  if (_internal_has_map()) {
    clear_has_kind();
    ::io::substrait::ParameterizedType_ParameterizedMap* temp = kind_.map_;
    kind_.map_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_map(::io::substrait::ParameterizedType_ParameterizedMap* map) {
  clear_kind();
  if (map) {
    set_has_map();
    kind_.map_ = map;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.map)
}
inline ::io::substrait::ParameterizedType_ParameterizedMap* ParameterizedType::_internal_mutable_map() {
  if (!_internal_has_map()) {
    clear_kind();
    set_has_map();
    kind_.map_ = CreateMaybeMessage< ::io::substrait::ParameterizedType_ParameterizedMap >(GetArena());
  }
  return kind_.map_;
}
inline ::io::substrait::ParameterizedType_ParameterizedMap* ParameterizedType::mutable_map() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.map)
  return _internal_mutable_map();
}

// .io.substrait.Extensions.TypeId user_defined = 31;
inline bool ParameterizedType::_internal_has_user_defined() const {
  return kind_case() == kUserDefined;
}
inline bool ParameterizedType::has_user_defined() const {
  return _internal_has_user_defined();
}
inline void ParameterizedType::set_has_user_defined() {
  _oneof_case_[0] = kUserDefined;
}
inline ::io::substrait::Extensions_TypeId* ParameterizedType::release_user_defined() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.user_defined)
  if (_internal_has_user_defined()) {
    clear_has_kind();
      ::io::substrait::Extensions_TypeId* temp = kind_.user_defined_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.user_defined_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::Extensions_TypeId& ParameterizedType::_internal_user_defined() const {
  return _internal_has_user_defined()
      ? *kind_.user_defined_
      : reinterpret_cast< ::io::substrait::Extensions_TypeId&>(::io::substrait::_Extensions_TypeId_default_instance_);
}
inline const ::io::substrait::Extensions_TypeId& ParameterizedType::user_defined() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.user_defined)
  return _internal_user_defined();
}
inline ::io::substrait::Extensions_TypeId* ParameterizedType::unsafe_arena_release_user_defined() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.user_defined)
  if (_internal_has_user_defined()) {
    clear_has_kind();
    ::io::substrait::Extensions_TypeId* temp = kind_.user_defined_;
    kind_.user_defined_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_user_defined(::io::substrait::Extensions_TypeId* user_defined) {
  clear_kind();
  if (user_defined) {
    set_has_user_defined();
    kind_.user_defined_ = user_defined;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.user_defined)
}
inline ::io::substrait::Extensions_TypeId* ParameterizedType::_internal_mutable_user_defined() {
  if (!_internal_has_user_defined()) {
    clear_kind();
    set_has_user_defined();
    kind_.user_defined_ = CreateMaybeMessage< ::io::substrait::Extensions_TypeId >(GetArena());
  }
  return kind_.user_defined_;
}
inline ::io::substrait::Extensions_TypeId* ParameterizedType::mutable_user_defined() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.user_defined)
  return _internal_mutable_user_defined();
}

// .io.substrait.ParameterizedType.TypeParameter type_parameter = 33;
inline bool ParameterizedType::_internal_has_type_parameter() const {
  return kind_case() == kTypeParameter;
}
inline bool ParameterizedType::has_type_parameter() const {
  return _internal_has_type_parameter();
}
inline void ParameterizedType::set_has_type_parameter() {
  _oneof_case_[0] = kTypeParameter;
}
inline void ParameterizedType::clear_type_parameter() {
  if (_internal_has_type_parameter()) {
    if (GetArena() == nullptr) {
      delete kind_.type_parameter_;
    }
    clear_has_kind();
  }
}
inline ::io::substrait::ParameterizedType_TypeParameter* ParameterizedType::release_type_parameter() {
  // @@protoc_insertion_point(field_release:io.substrait.ParameterizedType.type_parameter)
  if (_internal_has_type_parameter()) {
    clear_has_kind();
      ::io::substrait::ParameterizedType_TypeParameter* temp = kind_.type_parameter_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.type_parameter_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::substrait::ParameterizedType_TypeParameter& ParameterizedType::_internal_type_parameter() const {
  return _internal_has_type_parameter()
      ? *kind_.type_parameter_
      : reinterpret_cast< ::io::substrait::ParameterizedType_TypeParameter&>(::io::substrait::_ParameterizedType_TypeParameter_default_instance_);
}
inline const ::io::substrait::ParameterizedType_TypeParameter& ParameterizedType::type_parameter() const {
  // @@protoc_insertion_point(field_get:io.substrait.ParameterizedType.type_parameter)
  return _internal_type_parameter();
}
inline ::io::substrait::ParameterizedType_TypeParameter* ParameterizedType::unsafe_arena_release_type_parameter() {
  // @@protoc_insertion_point(field_unsafe_arena_release:io.substrait.ParameterizedType.type_parameter)
  if (_internal_has_type_parameter()) {
    clear_has_kind();
    ::io::substrait::ParameterizedType_TypeParameter* temp = kind_.type_parameter_;
    kind_.type_parameter_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterizedType::unsafe_arena_set_allocated_type_parameter(::io::substrait::ParameterizedType_TypeParameter* type_parameter) {
  clear_kind();
  if (type_parameter) {
    set_has_type_parameter();
    kind_.type_parameter_ = type_parameter;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:io.substrait.ParameterizedType.type_parameter)
}
inline ::io::substrait::ParameterizedType_TypeParameter* ParameterizedType::_internal_mutable_type_parameter() {
  if (!_internal_has_type_parameter()) {
    clear_kind();
    set_has_type_parameter();
    kind_.type_parameter_ = CreateMaybeMessage< ::io::substrait::ParameterizedType_TypeParameter >(GetArena());
  }
  return kind_.type_parameter_;
}
inline ::io::substrait::ParameterizedType_TypeParameter* ParameterizedType::mutable_type_parameter() {
  // @@protoc_insertion_point(field_mutable:io.substrait.ParameterizedType.type_parameter)
  return _internal_mutable_type_parameter();
}

inline bool ParameterizedType::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
inline void ParameterizedType::clear_has_kind() {
  _oneof_case_[0] = KIND_NOT_SET;
}
inline ParameterizedType::KindCase ParameterizedType::kind_case() const {
  return ParameterizedType::KindCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace substrait
}  // namespace io

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_parameterized_5ftypes_2eproto
